{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-0f26309e59dda3a7.js","node_modules/photoswipe/dist/photoswipe.esm.js","src/js/util/util.js","src/js/util/dom-events.js","src/js/util/viewport-size.js","src/js/slide/pan-bounds.js","src/js/slide/zoom-level.js","src/js/slide/slide.js","src/js/gestures/drag-handler.js","src/js/gestures/zoom-handler.js","src/js/gestures/tap-handler.js","src/js/gestures/gestures.js","src/js/main-scroll.js","src/js/keyboard.js","src/js/util/css-animation.js","src/js/util/spring-easer.js","src/js/util/spring-animation.js","src/js/util/animations.js","src/js/scroll-wheel.js","src/js/ui/ui-element.js","src/js/ui/button-arrow.js","src/js/ui/button-close.js","src/js/ui/button-zoom.js","src/js/ui/loading-indicator.js","src/js/ui/counter-indicator.js","src/js/ui/ui.js","src/js/slide/get-thumb-bounds.js","src/js/core/eventable.js","src/js/slide/placeholder.js","src/js/slide/content.js","src/js/slide/loader.js","src/js/core/base.js","src/js/opener.js","src/js/photoswipe.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"567a08b4f6f31c2f\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}",null,"/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","// Detect passive event listener support\r\nlet supportsPassive = false;\r\n/* eslint-disable */\r\ntry {\r\n  /* @ts-ignore */\r\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n    get: () => {\r\n      supportsPassive = true;\r\n    }\r\n  }));\r\n} catch (e) {}\r\n/* eslint-enable */\r\n\r\n/**\r\n * @typedef {Object} PoolItem\r\n * @prop {HTMLElement | Window | Document | undefined | null} target\r\n * @prop {string} type\r\n * @prop {EventListenerOrEventListenerObject} listener\r\n * @prop {boolean} [passive]\r\n */\r\n\r\nclass DOMEvents {\r\n  constructor() {\r\n    /**\r\n     * @type {PoolItem[]}\r\n     * @private\r\n     */\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type Can be multiple, separated by space.\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  add(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive);\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  remove(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive, true);\r\n  }\r\n\r\n  /**\r\n   * Removes all bound events\r\n   */\r\n  removeAll() {\r\n    this._pool.forEach((poolItem) => {\r\n      this._toggleListener(\r\n        poolItem.target,\r\n        poolItem.type,\r\n        poolItem.listener,\r\n        poolItem.passive,\r\n        true,\r\n        true\r\n      );\r\n    });\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds or removes event\r\n   *\r\n   * @private\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   * @param {boolean} [unbind] Whether the event should be added or removed\r\n   * @param {boolean} [skipPool] Whether events pool should be skipped\r\n   */\r\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    const methodName = unbind ? 'removeEventListener' : 'addEventListener';\r\n    const types = type.split(' ');\r\n    types.forEach((eType) => {\r\n      if (eType) {\r\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\r\n        // so developer doesn't need to do this manually\r\n        if (!skipPool) {\r\n          if (unbind) {\r\n            // Remove from the events pool\r\n            this._pool = this._pool.filter((poolItem) => {\r\n              return poolItem.type !== eType\r\n                || poolItem.listener !== listener\r\n                || poolItem.target !== target;\r\n            });\r\n          } else {\r\n            // Add to the events pool\r\n            this._pool.push({\r\n              target,\r\n              type: eType,\r\n              listener,\r\n              passive\r\n            });\r\n          }\r\n        }\r\n\r\n        // most PhotoSwipe events call preventDefault,\r\n        // and we do not need browser to scroll the page\r\n        const eventOptions = supportsPassive ? { passive: (passive || false) } : false;\r\n\r\n        target[methodName](\r\n          eType,\r\n          listener,\r\n          eventOptions\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default DOMEvents;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","import { clamp } from '../util/util.js';\r\nimport { parsePaddingOption } from '../util/viewport-size.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {Record<Axis, number>} Point */\r\n/** @typedef {'x' | 'y'} Axis */\r\n\r\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\r\nclass PanBounds {\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  constructor(slide) {\r\n    this.slide = slide;\r\n    this.currZoomLevel = 1;\r\n    this.center = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.max = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.min = /** @type {Point} */ { x: 0, y: 0 };\r\n  }\r\n\r\n  /**\r\n   * _getItemBounds\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  update(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n\r\n    if (!this.slide.width) {\r\n      this.reset();\r\n    } else {\r\n      this._updateAxis('x');\r\n      this._updateAxis('y');\r\n      this.slide.pswp.dispatch('calcBounds', { slide: this.slide });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * _calculateItemBoundsForAxis\r\n   *\r\n   * @param {Axis} axis\r\n   */\r\n  _updateAxis(axis) {\r\n    const { pswp } = this.slide;\r\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\r\n    const paddingProp = axis === 'x' ? 'left' : 'top';\r\n    const padding = parsePaddingOption(\r\n      paddingProp,\r\n      pswp.options,\r\n      pswp.viewportSize,\r\n      this.slide.data,\r\n      this.slide.index\r\n    );\r\n\r\n    const panAreaSize = this.slide.panAreaSize[axis];\r\n\r\n    // Default position of element.\r\n    // By default, it is center of viewport:\r\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding;\r\n\r\n    // maximum pan position\r\n    this.max[axis] = (elSize > panAreaSize)\r\n      ? Math.round(panAreaSize - elSize) + padding\r\n      : this.center[axis];\r\n\r\n    // minimum pan position\r\n    this.min[axis] = (elSize > panAreaSize)\r\n      ? padding\r\n      : this.center[axis];\r\n  }\r\n\r\n  // _getZeroBounds\r\n  reset() {\r\n    this.center.x = 0;\r\n    this.center.y = 0;\r\n    this.max.x = 0;\r\n    this.max.y = 0;\r\n    this.min.x = 0;\r\n    this.min.y = 0;\r\n  }\r\n\r\n  /**\r\n   * Correct pan position if it's beyond the bounds\r\n   *\r\n   * @param {Axis} axis x or y\r\n   * @param {number} panOffset\r\n   * @returns {number}\r\n   */\r\n  correctPan(axis, panOffset) { // checkPanBounds\r\n    return clamp(panOffset, this.max[axis], this.min[axis]);\r\n  }\r\n}\r\n\r\nexport default PanBounds;\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @typedef {_SlideData & Record<string, any>} SlideData\r\n * @typedef {Object} _SlideData\r\n * @prop {HTMLElement} [element] thumbnail element\r\n * @prop {string} [src] image URL\r\n * @prop {string} [srcset] image srcset\r\n * @prop {number} [w] image width (deprecated)\r\n * @prop {number} [h] image height (deprecated)\r\n * @prop {number} [width] image width\r\n * @prop {number} [height] image height\r\n * @prop {string} [msrc] placeholder image URL that's displayed before large image is loaded\r\n * @prop {string} [alt] image alt text\r\n * @prop {boolean} [thumbCropped] whether thumbnail is cropped client-side or not\r\n * @prop {string} [html] html content of a slide\r\n * @prop {'image' | 'html' | string} [type] slide type\r\n */\r\n\r\nimport {\r\n  createElement,\r\n  setTransform,\r\n  equalizePoints,\r\n  roundPoint,\r\n  toTransformString,\r\n  clamp,\r\n} from '../util/util.js';\r\n\r\nimport PanBounds from './pan-bounds.js';\r\nimport ZoomLevel from './zoom-level.js';\r\nimport { getPanAreaSize } from '../util/viewport-size.js';\r\n\r\n/**\r\n * Renders and allows to control a single slide\r\n */\r\nclass Slide {\r\n  /**\r\n   * @param {SlideData} data\r\n   * @param {number} index\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(data, index, pswp) {\r\n    this.data = data;\r\n    this.index = index;\r\n    this.pswp = pswp;\r\n    this.isActive = (index === pswp.currIndex);\r\n    this.currentResolution = 0;\r\n    /** @type {Point} */\r\n    this.panAreaSize = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.pan = { x: 0, y: 0 };\r\n\r\n    this.isFirstSlide = (this.isActive && !pswp.opener.isOpen);\r\n\r\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\r\n\r\n    this.pswp.dispatch('gettingData', {\r\n      slide: this,\r\n      data: this.data,\r\n      index\r\n    });\r\n\r\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\r\n    this.container = createElement('pswp__zoom-wrap', 'div');\r\n    /** @type {HTMLElement | null} */\r\n    this.holderElement = null;\r\n\r\n    this.currZoomLevel = 1;\r\n    /** @type {number} */\r\n    this.width = this.content.width;\r\n    /** @type {number} */\r\n    this.height = this.content.height;\r\n    this.heavyAppended = false;\r\n    this.bounds = new PanBounds(this);\r\n\r\n    this.prevDisplayedWidth = -1;\r\n    this.prevDisplayedHeight = -1;\r\n\r\n    this.pswp.dispatch('slideInit', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {boolean} isActive\r\n   */\r\n  setIsActive(isActive) {\r\n    if (isActive && !this.isActive) {\r\n      // slide just became active\r\n      this.activate();\r\n    } else if (!isActive && this.isActive) {\r\n      // slide just became non-active\r\n      this.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends slide content to DOM\r\n   *\r\n   * @param {HTMLElement} holderElement\r\n   */\r\n  append(holderElement) {\r\n    this.holderElement = holderElement;\r\n\r\n    this.container.style.transformOrigin = '0 0';\r\n\r\n    // Slide appended to DOM\r\n    if (!this.data) {\r\n      return;\r\n    }\r\n\r\n    this.calculateSize();\r\n\r\n    this.load();\r\n    this.updateContentSize();\r\n    this.appendHeavy();\r\n\r\n    this.holderElement.appendChild(this.container);\r\n\r\n    this.zoomAndPanToInitial();\r\n\r\n    this.pswp.dispatch('firstZoomPan', { slide: this });\r\n\r\n    this.applyCurrentZoomPan();\r\n\r\n    this.pswp.dispatch('afterSetContent', { slide: this });\r\n\r\n    if (this.isActive) {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  load() {\r\n    this.content.load(false);\r\n    this.pswp.dispatch('slideLoad', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Append \"heavy\" DOM elements\r\n   *\r\n   * This may depend on a type of slide,\r\n   * but generally these are large images.\r\n   */\r\n  appendHeavy() {\r\n    const { pswp } = this;\r\n    const appendHeavyNearby = true; // todo\r\n\r\n    // Avoid appending heavy elements during animations\r\n    if (this.heavyAppended\r\n        || !pswp.opener.isOpen\r\n        || pswp.mainScroll.isShifted()\r\n        || (!this.isActive && !appendHeavyNearby)) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('appendHeavy', { slide: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.heavyAppended = true;\r\n\r\n    this.content.append();\r\n\r\n    this.pswp.dispatch('appendHeavyContent', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide is active (selected).\r\n   *\r\n   * If it's part of opening/closing transition -\r\n   * activate() will trigger after the transition is ended.\r\n   */\r\n  activate() {\r\n    this.isActive = true;\r\n    this.appendHeavy();\r\n    this.content.activate();\r\n    this.pswp.dispatch('slideActivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide becomes inactive.\r\n   *\r\n   * Slide can become inactive only after it was active.\r\n   */\r\n  deactivate() {\r\n    this.isActive = false;\r\n    this.content.deactivate();\r\n\r\n    if (this.currZoomLevel !== this.zoomLevels.initial) {\r\n      // allow filtering\r\n      this.calculateSize();\r\n    }\r\n\r\n    // reset zoom level\r\n    this.currentResolution = 0;\r\n    this.zoomAndPanToInitial();\r\n    this.applyCurrentZoomPan();\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('slideDeactivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * The slide should destroy itself, it will never be used again.\r\n   * (unbind all events and destroy internal components)\r\n   */\r\n  destroy() {\r\n    this.content.hasSlide = false;\r\n    this.content.remove();\r\n    this.container.remove();\r\n    this.pswp.dispatch('slideDestroy', { slide: this });\r\n  }\r\n\r\n  resize() {\r\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\r\n      // Keep initial zoom level if it was before the resize,\r\n      // as well as when this slide is not active\r\n\r\n      // Reset position and scale to original state\r\n      this.calculateSize();\r\n      this.currentResolution = 0;\r\n      this.zoomAndPanToInitial();\r\n      this.applyCurrentZoomPan();\r\n      this.updateContentSize();\r\n    } else {\r\n      // readjust pan position if it's beyond the bounds\r\n      this.calculateSize();\r\n      this.bounds.update(this.currZoomLevel);\r\n      this.panTo(this.pan.x, this.pan.y);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Apply size to current slide content,\r\n   * based on the current resolution and scale.\r\n   *\r\n   * @param {boolean} [force] if size should be updated even if dimensions weren't changed\r\n   */\r\n  updateContentSize(force) {\r\n    // Use initial zoom level\r\n    // if resolution is not defined (user didn't zoom yet)\r\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\r\n\r\n    if (!scaleMultiplier) {\r\n      return;\r\n    }\r\n\r\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\r\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\r\n\r\n    if (!this.sizeChanged(width, height) && !force) {\r\n      return;\r\n    }\r\n    this.content.setDisplayedSize(width, height);\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  sizeChanged(width, height) {\r\n    if (width !== this.prevDisplayedWidth\r\n        || height !== this.prevDisplayedHeight) {\r\n      this.prevDisplayedWidth = width;\r\n      this.prevDisplayedHeight = height;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /** @returns {HTMLImageElement | HTMLDivElement | null | undefined} */\r\n  getPlaceholderElement() {\r\n    return this.content.placeholder?.element;\r\n  }\r\n\r\n  /**\r\n   * Zoom current slide image to...\r\n   *\r\n   * @param {number} destZoomLevel Destination zoom level.\r\n   * @param {Point} [centerPoint]\r\n   * Transform origin center point, or false if viewport center should be used.\r\n   * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\r\n   * @param {boolean} [ignoreBounds] Minimum and maximum zoom levels will be ignored.\r\n   */\r\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\r\n    const { pswp } = this;\r\n    if (!this.isZoomable()\r\n        || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    pswp.dispatch('beforeZoomTo', {\r\n      destZoomLevel, centerPoint, transitionDuration\r\n    });\r\n\r\n    // stop all pan and zoom transitions\r\n    pswp.animations.stopAllPan();\r\n\r\n    // if (!centerPoint) {\r\n    //   centerPoint = pswp.getViewportCenterPoint();\r\n    // }\r\n\r\n    const prevZoomLevel = this.currZoomLevel;\r\n\r\n    if (!ignoreBounds) {\r\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\r\n    }\r\n\r\n    // if (transitionDuration === undefined) {\r\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\r\n    // }\r\n\r\n    this.setZoomLevel(destZoomLevel);\r\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\r\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\r\n    roundPoint(this.pan);\r\n\r\n    const finishTransition = () => {\r\n      this._setResolution(destZoomLevel);\r\n      this.applyCurrentZoomPan();\r\n    };\r\n\r\n    if (!transitionDuration) {\r\n      finishTransition();\r\n    } else {\r\n      pswp.animations.startTransition({\r\n        isPan: true,\r\n        name: 'zoomTo',\r\n        target: this.container,\r\n        transform: this.getCurrentTransform(),\r\n        onComplete: finishTransition,\r\n        duration: transitionDuration,\r\n        easing: pswp.options.easing\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} [centerPoint]\r\n   */\r\n  toggleZoom(centerPoint) {\r\n    this.zoomTo(\r\n      this.currZoomLevel === this.zoomLevels.initial\r\n        ? this.zoomLevels.secondary : this.zoomLevels.initial,\r\n      centerPoint,\r\n      this.pswp.options.zoomAnimationDuration\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Updates zoom level property and recalculates new pan bounds,\r\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  setZoomLevel(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n    this.bounds.update(this.currZoomLevel);\r\n  }\r\n\r\n  /**\r\n   * Get pan position after zoom at a given `point`.\r\n   *\r\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n   * pan bounds according to the new zoom level.\r\n   *\r\n   * @param {'x' | 'y'} axis\r\n   * @param {Point} [point]\r\n   * point based on which zoom is performed, usually refers to the current mouse position,\r\n   * if false - viewport center will be used.\r\n   * @param {number} [prevZoomLevel] Zoom level before new zoom was applied.\r\n   * @returns {number}\r\n   */\r\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\r\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\r\n    if (totalPanDistance === 0) {\r\n      return this.bounds.center[axis];\r\n    }\r\n\r\n    if (!point) {\r\n      point = this.pswp.getViewportCenterPoint();\r\n    }\r\n\r\n    if (!prevZoomLevel) {\r\n      prevZoomLevel = this.zoomLevels.initial;\r\n    }\r\n\r\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\r\n    return this.bounds.correctPan(\r\n      axis,\r\n      (this.pan[axis] - point[axis]) * zoomFactor + point[axis]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Apply pan and keep it within bounds.\r\n   *\r\n   * @param {number} panX\r\n   * @param {number} panY\r\n   */\r\n  panTo(panX, panY) {\r\n    this.pan.x = this.bounds.correctPan('x', panX);\r\n    this.pan.y = this.bounds.correctPan('y', panY);\r\n    this.applyCurrentZoomPan();\r\n  }\r\n\r\n  /**\r\n   * If the slide in the current state can be panned by the user\r\n   * @returns {boolean}\r\n   */\r\n  isPannable() {\r\n    return Boolean(this.width) && (this.currZoomLevel > this.zoomLevels.fit);\r\n  }\r\n\r\n  /**\r\n   * If the slide can be zoomed\r\n   * @returns {boolean}\r\n   */\r\n  isZoomable() {\r\n    return Boolean(this.width) && this.content.isZoomable();\r\n  }\r\n\r\n  /**\r\n   * Apply transform and scale based on\r\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n   */\r\n  applyCurrentZoomPan() {\r\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\r\n    if (this === this.pswp.currSlide) {\r\n      this.pswp.dispatch('zoomPanUpdate', { slide: this });\r\n    }\r\n  }\r\n\r\n  zoomAndPanToInitial() {\r\n    this.currZoomLevel = this.zoomLevels.initial;\r\n\r\n    // pan according to the zoom level\r\n    this.bounds.update(this.currZoomLevel);\r\n    equalizePoints(this.pan, this.bounds.center);\r\n    this.pswp.dispatch('initialZoomPan', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Set translate and scale based on current resolution\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} zoom\r\n   * @private\r\n   */\r\n  _applyZoomTransform(x, y, zoom) {\r\n    zoom /= this.currentResolution || this.zoomLevels.initial;\r\n    setTransform(this.container, x, y, zoom);\r\n  }\r\n\r\n  calculateSize() {\r\n    const { pswp } = this;\r\n\r\n    equalizePoints(\r\n      this.panAreaSize,\r\n      getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index)\r\n    );\r\n\r\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\r\n\r\n    pswp.dispatch('calcSlideSize', {\r\n      slide: this\r\n    });\r\n  }\r\n\r\n  /** @returns {string} */\r\n  getCurrentTransform() {\r\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\r\n    return toTransformString(this.pan.x, this.pan.y, scale);\r\n  }\r\n\r\n  /**\r\n   * Set resolution and re-render the image.\r\n   *\r\n   * For example, if the real image size is 2000x1500,\r\n   * and resolution is 0.5 - it will be rendered as 1000x750.\r\n   *\r\n   * Image with zoom level 2 and resolution 0.5 is\r\n   * the same as image with zoom level 1 and resolution 1.\r\n   *\r\n   * Used to optimize animations and make\r\n   * sure that browser renders image in the highest quality.\r\n   * Also used by responsive images to load the correct one.\r\n   *\r\n   * @param {number} newResolution\r\n   */\r\n  _setResolution(newResolution) {\r\n    if (newResolution === this.currentResolution) {\r\n      return;\r\n    }\r\n\r\n    this.currentResolution = newResolution;\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('resolutionChanged');\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n","import {\r\n  equalizePoints, roundPoint, clamp\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst PAN_END_FRICTION = 0.35;\r\nconst VERTICAL_DRAG_FRICTION = 0.6;\r\n\r\n// 1 corresponds to the third of viewport height\r\nconst MIN_RATIO_TO_CLOSE = 0.4;\r\n\r\n// Minimum speed required to navigate\r\n// to next or previous slide\r\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\r\n\r\n/**\r\n * @param {number} initialVelocity\r\n * @param {number} decelerationRate\r\n * @returns {number}\r\n */\r\nfunction project(initialVelocity, decelerationRate) {\r\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\r\n}\r\n\r\n/**\r\n * Handles single pointer dragging\r\n */\r\nclass DragHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = gestures.pswp;\r\n    /** @type {Point} */\r\n    this.startPan = { x: 0, y: 0 };\r\n  }\r\n\r\n  start() {\r\n    if (this.pswp.currSlide) {\r\n      equalizePoints(this.startPan, this.pswp.currSlide.pan);\r\n    }\r\n    this.pswp.animations.stopAll();\r\n  }\r\n\r\n  change() {\r\n    const { p1, prevP1, dragAxis } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (dragAxis === 'y'\r\n        && this.pswp.options.closeOnVerticalDrag\r\n        && (currSlide && currSlide.currZoomLevel <= currSlide.zoomLevels.fit)\r\n        && !this.gestures.isMultitouch) {\r\n      // Handle vertical drag to close\r\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\r\n      if (!this.pswp.dispatch('verticalDrag', { panY }).defaultPrevented) {\r\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\r\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\r\n        this.pswp.applyBgOpacity(bgOpacity);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\r\n      if (!mainScrollChanged) {\r\n        this._panOrMoveMainScroll('y');\r\n\r\n        if (currSlide) {\r\n          roundPoint(currSlide.pan);\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  end() {\r\n    const { velocity } = this.gestures;\r\n    const { mainScroll, currSlide } = this.pswp;\r\n    let indexDiff = 0;\r\n\r\n    this.pswp.animations.stopAll();\r\n\r\n    // Handle main scroll if it's shifted\r\n    if (mainScroll.isShifted()) {\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX();\r\n\r\n      // Ratio between 0 and 1:\r\n      // 0 - slide is not visible at all,\r\n      // 0.5 - half of the slide is visible\r\n      // 1 - slide is fully visible\r\n      const currentSlideVisibilityRatio = (mainScrollShiftDiff / this.pswp.viewportSize.x);\r\n\r\n      // Go next slide.\r\n      //\r\n      // - if velocity and its direction is matched,\r\n      //   and we see at least tiny part of the next slide\r\n      //\r\n      // - or if we see less than 50% of the current slide\r\n      //   and velocity is close to 0\r\n      //\r\n      if ((velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0)\r\n          || (velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5)) {\r\n        // Go to next slide\r\n        indexDiff = 1;\r\n        velocity.x = Math.min(velocity.x, 0);\r\n      } else if ((velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0)\r\n          || (velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5)) {\r\n        // Go to prev slide\r\n        indexDiff = -1;\r\n        velocity.x = Math.max(velocity.x, 0);\r\n      }\r\n\r\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\r\n    }\r\n\r\n    // Restore zoom level\r\n    if ((currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.max)\r\n        || this.gestures.isMultitouch) {\r\n      this.gestures.zoomLevels.correctZoomPan(true);\r\n    } else {\r\n      // we run two animations instead of one,\r\n      // as each axis has own pan boundaries and thus different spring function\r\n      // (correctZoomPan does not have this functionality,\r\n      //  it animates all properties with single timing function)\r\n      this._finishPanGestureForAxis('x');\r\n      this._finishPanGestureForAxis('y');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   */\r\n  _finishPanGestureForAxis(axis) {\r\n    const { velocity } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const panPos = pan[axis];\r\n    const restoreBgOpacity = (this.pswp.bgOpacity < 1 && axis === 'y');\r\n\r\n    // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\r\n    // Increasing this number will reduce travel distance\r\n    const decelerationRate = 0.995; // 0.99\r\n\r\n    // Pan position if there is no bounds\r\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\r\n\r\n    if (restoreBgOpacity) {\r\n      const vDragRatio = this._getVerticalDragRatio(panPos);\r\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition);\r\n\r\n      // If we are above and moving upwards,\r\n      // or if we are below and moving downwards\r\n      if ((vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE)\r\n          || (vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE)) {\r\n        this.pswp.close();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Pan position with corrected bounds\r\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition);\r\n\r\n    // Exit if pan position should not be changed\r\n    // or if speed it too low\r\n    if (panPos === correctedPanPosition) {\r\n      return;\r\n    }\r\n\r\n    // Overshoot if the final position is out of pan bounds\r\n    const dampingRatio = (correctedPanPosition === projectedPosition) ? 1 : 0.82;\r\n\r\n    const initialBgOpacity = this.pswp.bgOpacity;\r\n    const totalPanDist = correctedPanPosition - panPos;\r\n\r\n    this.pswp.animations.startSpring({\r\n      name: 'panGesture' + axis,\r\n      isPan: true,\r\n      start: panPos,\r\n      end: correctedPanPosition,\r\n      velocity: velocity[axis],\r\n      dampingRatio,\r\n      onUpdate: (pos) => {\r\n        // Animate opacity of background relative to Y pan position of an image\r\n        if (restoreBgOpacity && this.pswp.bgOpacity < 1) {\r\n          // 0 - start of animation, 1 - end of animation\r\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist;\r\n\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          this.pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio,\r\n            0,\r\n            1\r\n          ));\r\n        }\r\n\r\n        pan[axis] = Math.floor(pos);\r\n        currSlide.applyCurrentZoomPan();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update position of the main scroll,\r\n   * or/and update pan position of the current slide.\r\n   *\r\n   * Should return true if it changes (or can change) main scroll.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @returns {boolean}\r\n   */\r\n  _panOrMoveMainScroll(axis) {\r\n    const { p1, dragAxis, prevP1, isMultitouch } = this.gestures;\r\n    const { currSlide, mainScroll } = this.pswp;\r\n    const delta = (p1[axis] - prevP1[axis]);\r\n    const newMainScrollX = mainScroll.x + delta;\r\n\r\n    if (!delta || !currSlide) {\r\n      return false;\r\n    }\r\n\r\n    // Always move main scroll if image can not be panned\r\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\r\n      mainScroll.moveTo(newMainScrollX, true);\r\n      return true; // changed main scroll\r\n    }\r\n\r\n    const { bounds } = currSlide;\r\n    const newPan = currSlide.pan[axis] + delta;\r\n\r\n    if (this.pswp.options.allowPanToNext\r\n        && dragAxis === 'x'\r\n        && axis === 'x'\r\n        && !isMultitouch) {\r\n      const currSlideMainScrollX = mainScroll.getCurrSlideX();\r\n\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\r\n\r\n      const isLeftToRight = delta > 0;\r\n      const isRightToLeft = !isLeftToRight;\r\n\r\n      if (newPan > bounds.min[axis] && isLeftToRight) {\r\n        // Panning from left to right, beyond the left edge\r\n\r\n        // Wether the image was at minimum pan position (or less)\r\n        // when this drag gesture started.\r\n        // Minimum pan position refers to the left edge of the image.\r\n        const wasAtMinPanPosition = (bounds.min[axis] <= this.startPan[axis]);\r\n\r\n        if (wasAtMinPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\r\n        // Paning from right to left, beyond the right edge\r\n\r\n        // Maximum pan position refers to the right edge of the image.\r\n        const wasAtMaxPanPosition = (this.startPan[axis] <= bounds.max[axis]);\r\n\r\n        if (wasAtMaxPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else {\r\n        // If main scroll is shifted\r\n        if (mainScrollShiftDiff !== 0) {\r\n          // If main scroll is shifted right\r\n          if (mainScrollShiftDiff > 0 /*&& isRightToLeft*/) {\r\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          } else if (mainScrollShiftDiff < 0 /*&& isLeftToRight*/) {\r\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\r\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          }\r\n        } else {\r\n          // We are within pan bounds, so just pan\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      }\r\n    } else {\r\n      if (axis === 'y') {\r\n        // Do not pan vertically if main scroll is shifted o\r\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      } else {\r\n        this._setPanWithFriction(axis, newPan);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // If we move above - the ratio is negative\r\n  // If we move below the ratio is positive\r\n\r\n  /**\r\n   * Relation between pan Y position and third of viewport height.\r\n   *\r\n   * When we are at initial position (center bounds) - the ratio is 0,\r\n   * if position is shifted upwards - the ratio is negative,\r\n   * if position is shifted downwards - the ratio is positive.\r\n   *\r\n   * @private\r\n   * @param {number} panY The current pan Y position.\r\n   * @returns {number}\r\n   */\r\n  _getVerticalDragRatio(panY) {\r\n    return (panY - (this.pswp.currSlide?.bounds.center.y ?? 0)) / (this.pswp.viewportSize.y / 3);\r\n  }\r\n\r\n  /**\r\n   * Set pan position of the current slide.\r\n   * Apply friction if the position is beyond the pan bounds,\r\n   * or if custom friction is defined.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} potentialPan\r\n   * @param {number} [customFriction] (0.1 - 1)\r\n   */\r\n  _setPanWithFriction(axis, potentialPan, customFriction) {\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const correctedPan = bounds.correctPan(axis, potentialPan);\r\n    // If we are out of pan bounds\r\n    if (correctedPan !== potentialPan || customFriction) {\r\n      const delta = Math.round(potentialPan - pan[axis]);\r\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\r\n    } else {\r\n      pan[axis] = potentialPan;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragHandler;\r\n","import {\r\n  equalizePoints, getDistanceBetween, clamp, pointsEqual\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst UPPER_ZOOM_FRICTION = 0.05;\r\nconst LOWER_ZOOM_FRICTION = 0.15;\r\n\r\n\r\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nfunction getZoomPointsCenter(p, p1, p2) {\r\n  p.x = (p1.x + p2.x) / 2;\r\n  p.y = (p1.y + p2.y) / 2;\r\n  return p;\r\n}\r\n\r\nclass ZoomHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startPan = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startZoomPoint = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._zoomPoint = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._wasOverFitZoomLevel = false;\r\n    /** @private */\r\n    this._startZoomLevel = 1;\r\n  }\r\n\r\n  start() {\r\n    const { currSlide } = this.gestures.pswp;\r\n    if (currSlide) {\r\n      this._startZoomLevel = currSlide.currZoomLevel;\r\n      equalizePoints(this._startPan, currSlide.pan);\r\n    }\r\n\r\n    this.gestures.pswp.animations.stopAllPan();\r\n    this._wasOverFitZoomLevel = false;\r\n  }\r\n\r\n  change() {\r\n    const { p1, startP1, p2, startP2, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const minZoomLevel = currSlide.zoomLevels.min;\r\n    const maxZoomLevel = currSlide.zoomLevels.max;\r\n\r\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\r\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\r\n\r\n    let currZoomLevel = (1 / getDistanceBetween(startP1, startP2))\r\n                      * getDistanceBetween(p1, p2)\r\n                      * this._startZoomLevel;\r\n\r\n    // slightly over the zoom.fit\r\n    if (currZoomLevel > currSlide.zoomLevels.initial + (currSlide.zoomLevels.initial / 15)) {\r\n      this._wasOverFitZoomLevel = true;\r\n    }\r\n\r\n    if (currZoomLevel < minZoomLevel) {\r\n      if (pswp.options.pinchToClose\r\n          && !this._wasOverFitZoomLevel\r\n          && this._startZoomLevel <= currSlide.zoomLevels.initial) {\r\n        // fade out background if zooming out\r\n        const bgOpacity = 1 - ((minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2));\r\n        if (!pswp.dispatch('pinchClose', { bgOpacity }).defaultPrevented) {\r\n          pswp.applyBgOpacity(bgOpacity);\r\n        }\r\n      } else {\r\n        // Apply the friction if zoom level is below the min\r\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\r\n      }\r\n    } else if (currZoomLevel > maxZoomLevel) {\r\n      // Apply the friction if zoom level is above the max\r\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\r\n    }\r\n\r\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\r\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\r\n\r\n    currSlide.setZoomLevel(currZoomLevel);\r\n    currSlide.applyCurrentZoomPan();\r\n  }\r\n\r\n  end() {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    if ((!currSlide || currSlide.currZoomLevel < currSlide.zoomLevels.initial)\r\n        && !this._wasOverFitZoomLevel\r\n        && pswp.options.pinchToClose) {\r\n      pswp.close();\r\n    } else {\r\n      this.correctZoomPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} currZoomLevel\r\n   * @returns {number}\r\n   */\r\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\r\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\r\n    return this._zoomPoint[axis]\r\n            - ((this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Correct currZoomLevel and pan if they are\r\n   * beyond minimum or maximum values.\r\n   * With animation.\r\n   *\r\n   * @param {boolean} [ignoreGesture]\r\n   * Wether gesture coordinates should be ignored when calculating destination pan position.\r\n   */\r\n  correctZoomPan(ignoreGesture) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide?.isZoomable()) {\r\n      return;\r\n    }\r\n\r\n    if (this._zoomPoint.x === 0) {\r\n      ignoreGesture = true;\r\n    }\r\n\r\n    const prevZoomLevel = currSlide.currZoomLevel;\r\n\r\n    /** @type {number} */\r\n    let destinationZoomLevel;\r\n    let currZoomLevelNeedsChange = true;\r\n\r\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\r\n      destinationZoomLevel = currSlide.zoomLevels.initial;\r\n      // zoom to min\r\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\r\n      destinationZoomLevel = currSlide.zoomLevels.max;\r\n      // zoom to max\r\n    } else {\r\n      currZoomLevelNeedsChange = false;\r\n      destinationZoomLevel = prevZoomLevel;\r\n    }\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const restoreBgOpacity = pswp.bgOpacity < 1;\r\n\r\n    const initialPan = equalizePoints({ x: 0, y: 0 }, currSlide.pan);\r\n    let destinationPan = equalizePoints({ x: 0, y: 0 }, initialPan);\r\n\r\n    if (ignoreGesture) {\r\n      this._zoomPoint.x = 0;\r\n      this._zoomPoint.y = 0;\r\n      this._startZoomPoint.x = 0;\r\n      this._startZoomPoint.y = 0;\r\n      this._startZoomLevel = prevZoomLevel;\r\n      equalizePoints(this._startPan, initialPan);\r\n    }\r\n\r\n    if (currZoomLevelNeedsChange) {\r\n      destinationPan = {\r\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\r\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\r\n      };\r\n    }\r\n\r\n    // set zoom level, so pan bounds are updated according to it\r\n    currSlide.setZoomLevel(destinationZoomLevel);\r\n\r\n    destinationPan = {\r\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\r\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\r\n    };\r\n\r\n    // return zoom level and its bounds to initial\r\n    currSlide.setZoomLevel(prevZoomLevel);\r\n\r\n    const panNeedsChange = !pointsEqual(destinationPan, initialPan);\r\n\r\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\r\n      // update resolution after gesture\r\n      currSlide._setResolution(destinationZoomLevel);\r\n      currSlide.applyCurrentZoomPan();\r\n\r\n      // nothing to animate\r\n      return;\r\n    }\r\n\r\n    pswp.animations.stopAllPan();\r\n\r\n    pswp.animations.startSpring({\r\n      isPan: true,\r\n      start: 0,\r\n      end: 1000,\r\n      velocity: 0,\r\n      dampingRatio: 1,\r\n      naturalFrequency: 40,\r\n      onUpdate: (now) => {\r\n        now /= 1000; // 0 - start, 1 - end\r\n\r\n        if (panNeedsChange || currZoomLevelNeedsChange) {\r\n          if (panNeedsChange) {\r\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\r\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\r\n          }\r\n\r\n          if (currZoomLevelNeedsChange) {\r\n            const newZoomLevel = prevZoomLevel\r\n                        + (destinationZoomLevel - prevZoomLevel) * now;\r\n            currSlide.setZoomLevel(newZoomLevel);\r\n          }\r\n\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n\r\n        // Restore background opacity\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1\r\n          ));\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        // update resolution after transition ends\r\n        currSlide._setResolution(destinationZoomLevel);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default ZoomHandler;\r\n","/**\r\n * @template {string} T\r\n * @template {string} P\r\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\r\n */\r\n\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\r\n\r\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {PointerEvent} event\r\n * @returns {boolean}\r\n */\r\nfunction didTapOnMainContent(event) {\r\n  return !!(/** @type {HTMLElement} */ (event.target).closest('.pswp__container'));\r\n}\r\n\r\n/**\r\n * Tap, double-tap handler.\r\n */\r\nclass TapHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  click(point, originalEvent) {\r\n    const targetClassList = /** @type {HTMLElement} */ (originalEvent.target).classList;\r\n    const isImageClick = targetClassList.contains('pswp__img');\r\n    const isBackgroundClick = targetClassList.contains('pswp__item')\r\n                              || targetClassList.contains('pswp__zoom-wrap');\r\n\r\n    if (isImageClick) {\r\n      this._doClickOrTapAction('imageClick', point, originalEvent);\r\n    } else if (isBackgroundClick) {\r\n      this._doClickOrTapAction('bgClick', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  tap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('tap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  doubleTap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Actions} actionName\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  _doClickOrTapAction(actionName, point, originalEvent) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const actionFullName = /** @type {AddPostfix<Actions, 'Action'>} */ (actionName + 'Action');\r\n    const optionValue = pswp.options[actionFullName];\r\n\r\n    if (pswp.dispatch(actionFullName, { point, originalEvent }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      optionValue.call(pswp, point, originalEvent);\r\n      return;\r\n    }\r\n\r\n    switch (optionValue) {\r\n      case 'close':\r\n      case 'next':\r\n        pswp[optionValue]();\r\n        break;\r\n      case 'zoom':\r\n        currSlide?.toggleZoom(point);\r\n        break;\r\n      case 'zoom-or-close':\r\n        // by default click zooms current image,\r\n        // if it can not be zoomed - gallery will be closed\r\n        if (currSlide?.isZoomable()\r\n            && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\r\n          currSlide.toggleZoom(point);\r\n        } else if (pswp.options.clickToCloseNonZoomable) {\r\n          pswp.close();\r\n        }\r\n        break;\r\n      case 'toggle-controls':\r\n        this.gestures.pswp.element?.classList.toggle('pswp--ui-visible');\r\n        // if (_controlsVisible) {\r\n        //   _ui.hideControls();\r\n        // } else {\r\n        //   _ui.showControls();\r\n        // }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TapHandler;\r\n","import {\r\n  equalizePoints, pointsEqual, getDistanceBetween\r\n} from '../util/util.js';\r\n\r\nimport DragHandler from './drag-handler.js';\r\nimport ZoomHandler from './zoom-handler.js';\r\nimport TapHandler from './tap-handler.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n// How far should user should drag\r\n// until we can determine that the gesture is swipe and its direction\r\nconst AXIS_SWIPE_HYSTERISIS = 10;\r\n//const PAN_END_FRICTION = 0.35;\r\n\r\nconst DOUBLE_TAP_DELAY = 300; // ms\r\nconst MIN_TAP_DISTANCE = 25; // px\r\n\r\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\r\nclass Gestures {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    /** @type {'x' | 'y' | null} */\r\n    this.dragAxis = null;\r\n\r\n    // point objects are defined once and reused\r\n    // PhotoSwipe keeps track only of two pointers, others are ignored\r\n    /** @type {Point} */\r\n    this.p1 = { x: 0, y: 0 }; // the first pressed pointer\r\n    /** @type {Point} */\r\n    this.p2 = { x: 0, y: 0 }; // the second pressed pointer\r\n    /** @type {Point} */\r\n    this.prevP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.prevP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.velocity = { x: 0, y: 0 };\r\n\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._lastStartP1 = { x: 0, y: 0 };\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._intervalP1 = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @type {Point[]}\r\n     * @private\r\n     */\r\n    this._ongoingPointers = [];\r\n    /** @private */\r\n    this._touchEventEnabled = 'ontouchstart' in window;\r\n    /** @private */\r\n    this._pointerEventEnabled = !!(window.PointerEvent);\r\n    this.supportsTouch = this._touchEventEnabled\r\n                          || (this._pointerEventEnabled && navigator.maxTouchPoints > 1);\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @private */\r\n    this._intervalTime = 0;\r\n    /** @private */\r\n    this._velocityCalculated = false;\r\n    this.isMultitouch = false;\r\n    this.isDragging = false;\r\n    this.isZooming = false;\r\n    /** @type {number | null} */\r\n    this.raf = null;\r\n    /** @type {NodeJS.Timeout | null}\r\n     * @private\r\n     */\r\n    this._tapTimer = null;\r\n\r\n    if (!this.supportsTouch) {\r\n      // disable pan to next slide for non-touch devices\r\n      pswp.options.allowPanToNext = false;\r\n    }\r\n\r\n    this.drag = new DragHandler(this);\r\n    this.zoomLevels = new ZoomHandler(this);\r\n    this.tapHandler = new TapHandler(this);\r\n\r\n    pswp.on('bindEvents', () => {\r\n      pswp.events.add(\r\n        pswp.scrollWrap,\r\n        'click',\r\n        /** @type EventListener */(this._onClick.bind(this))\r\n      );\r\n\r\n      if (this._pointerEventEnabled) {\r\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\r\n      } else if (this._touchEventEnabled) {\r\n        this._bindEvents('touch', 'start', 'end', 'cancel');\r\n\r\n        // In previous versions we also bound mouse event here,\r\n        // in case device supports both touch and mouse events,\r\n        // but newer versions of browsers now support PointerEvent.\r\n\r\n        // on iOS10 if you bind touchmove/end after touchstart,\r\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\r\n        // preventDefault will have no effect on touchmove and touchend.\r\n        // Unless you bind it previously.\r\n        if (pswp.scrollWrap) {\r\n          pswp.scrollWrap.ontouchmove = () => {};\r\n          pswp.scrollWrap.ontouchend = () => {};\r\n        }\r\n      } else {\r\n        this._bindEvents('mouse', 'down', 'up');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'mouse' | 'touch' | 'pointer'} pref\r\n   * @param {'down' | 'start'} down\r\n   * @param {'up' | 'end'} up\r\n   * @param {'cancel'} [cancel]\r\n   */\r\n  _bindEvents(pref, down, up, cancel) {\r\n    const { pswp } = this;\r\n    const { events } = pswp;\r\n\r\n    const cancelEvent = cancel ? pref + cancel : '';\r\n\r\n    events.add(\r\n      pswp.scrollWrap,\r\n      pref + down,\r\n      /** @type EventListener */(this.onPointerDown.bind(this))\r\n    );\r\n    events.add(window, pref + 'move', /** @type EventListener */(this.onPointerMove.bind(this)));\r\n    events.add(window, pref + up, /** @type EventListener */(this.onPointerUp.bind(this)));\r\n    if (cancelEvent) {\r\n      events.add(\r\n        pswp.scrollWrap,\r\n        cancelEvent,\r\n        /** @type EventListener */(this.onPointerUp.bind(this))\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerDown(e) {\r\n    // We do not call preventDefault for touch events\r\n    // to allow browser to show native dialog on longpress\r\n    // (the one that allows to save image or open it in new tab).\r\n    //\r\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\r\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\r\n    const isMousePointer = e.type === 'mousedown' || e.pointerType === 'mouse';\r\n\r\n    // Allow dragging only via left mouse button.\r\n    // http://www.quirksmode.org/js/events_properties.html\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\r\n    if (isMousePointer && e.button > 0) {\r\n      return;\r\n    }\r\n\r\n    const { pswp } = this;\r\n\r\n    // if PhotoSwipe is opening or closing\r\n    if (!pswp.opener.isOpen) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (pswp.dispatch('pointerDown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (isMousePointer) {\r\n      pswp.mouseDetected();\r\n\r\n      // preventDefault mouse event to prevent\r\n      // browser image drag feature\r\n      this._preventPointerEventBehaviour(e);\r\n    }\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    this._updatePoints(e, 'down');\r\n\r\n    if (this._numActivePoints === 1) {\r\n      this.dragAxis = null;\r\n      // we need to store initial point to determine the main axis,\r\n      // drag is activated only after the axis is determined\r\n      equalizePoints(this.startP1, this.p1);\r\n    }\r\n\r\n    if (this._numActivePoints > 1) {\r\n      // Tap or double tap should not trigger if more than one pointer\r\n      this._clearTapTimer();\r\n      this.isMultitouch = true;\r\n    } else {\r\n      this.isMultitouch = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerMove(e) {\r\n    e.preventDefault(); // always preventDefault move event\r\n\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'move');\r\n\r\n    if (this.pswp.dispatch('pointerMove', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 1 && !this.isDragging) {\r\n      if (!this.dragAxis) {\r\n        this._calculateDragDirection();\r\n      }\r\n\r\n      // Drag axis was detected, emit drag.start\r\n      if (this.dragAxis && !this.isDragging) {\r\n        if (this.isZooming) {\r\n          this.isZooming = false;\r\n          this.zoomLevels.end();\r\n        }\r\n\r\n        this.isDragging = true;\r\n        this._clearTapTimer(); // Tap can not trigger after drag\r\n\r\n        // Adjust starting point\r\n        this._updateStartPoints();\r\n        this._intervalTime = Date.now();\r\n        //this._startTime = this._intervalTime;\r\n        this._velocityCalculated = false;\r\n        equalizePoints(this._intervalP1, this.p1);\r\n        this.velocity.x = 0;\r\n        this.velocity.y = 0;\r\n        this.drag.start();\r\n\r\n        this._rafStopLoop();\r\n        this._rafRenderLoop();\r\n      }\r\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\r\n      this._finishDrag();\r\n\r\n      this.isZooming = true;\r\n\r\n      // Adjust starting points\r\n      this._updateStartPoints();\r\n\r\n      this.zoomLevels.start();\r\n\r\n      this._rafStopLoop();\r\n      this._rafRenderLoop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finishDrag() {\r\n    if (this.isDragging) {\r\n      this.isDragging = false;\r\n\r\n      // Try to calculate velocity,\r\n      // if it wasn't calculated yet in drag.change\r\n      if (!this._velocityCalculated) {\r\n        this._updateVelocity(true);\r\n      }\r\n\r\n      this.drag.end();\r\n      this.dragAxis = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerUp(e) {\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'up');\r\n\r\n    if (this.pswp.dispatch('pointerUp', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 0) {\r\n      this._rafStopLoop();\r\n\r\n      if (this.isDragging) {\r\n        this._finishDrag();\r\n      } else if (!this.isZooming && !this.isMultitouch) {\r\n        //this.zoomLevels.correctZoomPan();\r\n        this._finishTap(e);\r\n      }\r\n    }\r\n\r\n    if (this._numActivePoints < 2 && this.isZooming) {\r\n      this.isZooming = false;\r\n      this.zoomLevels.end();\r\n\r\n      if (this._numActivePoints === 1) {\r\n        // Since we have 1 point left, we need to reinitiate drag\r\n        this.dragAxis = null;\r\n        this._updateStartPoints();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafRenderLoop() {\r\n    if (this.isDragging || this.isZooming) {\r\n      this._updateVelocity();\r\n\r\n      if (this.isDragging) {\r\n        // make sure that pointer moved since the last update\r\n        if (!pointsEqual(this.p1, this.prevP1)) {\r\n          this.drag.change();\r\n        }\r\n      } else /* if (this.isZooming) */ {\r\n        if (!pointsEqual(this.p1, this.prevP1)\r\n            || !pointsEqual(this.p2, this.prevP2)) {\r\n          this.zoomLevels.change();\r\n        }\r\n      }\r\n\r\n      this._updatePrevPoints();\r\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update velocity at 50ms interval\r\n   *\r\n   * @private\r\n   * @param {boolean} [force]\r\n   */\r\n  _updateVelocity(force) {\r\n    const time = Date.now();\r\n    const duration = time - this._intervalTime;\r\n\r\n    if (duration < 50 && !force) {\r\n      return;\r\n    }\r\n\r\n\r\n    this.velocity.x = this._getVelocity('x', duration);\r\n    this.velocity.y = this._getVelocity('y', duration);\r\n\r\n    this._intervalTime = time;\r\n    equalizePoints(this._intervalP1, this.p1);\r\n    this._velocityCalculated = true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _finishTap(e) {\r\n    const { mainScroll } = this.pswp;\r\n\r\n    // Do not trigger tap events if main scroll is shifted\r\n    if (mainScroll.isShifted()) {\r\n      // restore main scroll position\r\n      // (usually happens if stopped in the middle of animation)\r\n      mainScroll.moveIndexBy(0, true);\r\n      return;\r\n    }\r\n\r\n    // Do not trigger tap for touchcancel or pointercancel\r\n    if (e.type.indexOf('cancel') > 0) {\r\n      return;\r\n    }\r\n\r\n    // Trigger click instead of tap for mouse events\r\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\r\n      this.tapHandler.click(this.startP1, e);\r\n      return;\r\n    }\r\n\r\n    // Disable delay if there is no doubleTapAction\r\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0;\r\n\r\n    // If tapTimer is defined - we tapped recently,\r\n    // check if the current tap is close to the previous one,\r\n    // if yes - trigger double tap\r\n    if (this._tapTimer) {\r\n      this._clearTapTimer();\r\n      // Check if two taps were more or less on the same place\r\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\r\n        this.tapHandler.doubleTap(this.startP1, e);\r\n      }\r\n    } else {\r\n      equalizePoints(this._lastStartP1, this.startP1);\r\n      this._tapTimer = setTimeout(() => {\r\n        this.tapHandler.tap(this.startP1, e);\r\n        this._clearTapTimer();\r\n      }, tapDelay);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearTapTimer() {\r\n    if (this._tapTimer) {\r\n      clearTimeout(this._tapTimer);\r\n      this._tapTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get velocity for axis\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} duration\r\n   * @returns {number}\r\n   */\r\n  _getVelocity(axis, duration) {\r\n    // displacement is like distance, but can be negative.\r\n    const displacement = this.p1[axis] - this._intervalP1[axis];\r\n\r\n    if (Math.abs(displacement) > 1 && duration > 5) {\r\n      return displacement / duration;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafStopLoop() {\r\n    if (this.raf) {\r\n      cancelAnimationFrame(this.raf);\r\n      this.raf = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _preventPointerEventBehaviour(e) {\r\n    // TODO find a way to disable e.preventDefault on some elements\r\n    //      via event or some class or something\r\n    e.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Parses and normalizes points from the touch, mouse or pointer event.\r\n   * Updates p1 and p2.\r\n   *\r\n   * @private\r\n   * @param {PointerEvent | TouchEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _updatePoints(e, pointerType) {\r\n    if (this._pointerEventEnabled) {\r\n      const pointerEvent = /** @type {PointerEvent} */ (e);\r\n      // Try to find the current pointer in ongoing pointers by its ID\r\n      const pointerIndex = this._ongoingPointers.findIndex((ongoingPointer) => {\r\n        return ongoingPointer.id === pointerEvent.pointerId;\r\n      });\r\n\r\n      if (pointerType === 'up' && pointerIndex > -1) {\r\n        // release the pointer - remove it from ongoing\r\n        this._ongoingPointers.splice(pointerIndex, 1);\r\n      } else if (pointerType === 'down' && pointerIndex === -1) {\r\n        // add new pointer\r\n        this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, { x: 0, y: 0 }));\r\n      } else if (pointerIndex > -1) {\r\n        // update existing pointer\r\n        this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\r\n      }\r\n\r\n      this._numActivePoints = this._ongoingPointers.length;\r\n\r\n      // update points that PhotoSwipe uses\r\n      // to calculate position and scale\r\n      if (this._numActivePoints > 0) {\r\n        equalizePoints(this.p1, this._ongoingPointers[0]);\r\n      }\r\n\r\n      if (this._numActivePoints > 1) {\r\n        equalizePoints(this.p2, this._ongoingPointers[1]);\r\n      }\r\n    } else {\r\n      const touchEvent = /** @type {TouchEvent} */ (e);\r\n\r\n      this._numActivePoints = 0;\r\n      if (touchEvent.type.indexOf('touch') > -1) {\r\n        // Touch Event\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\r\n        if (touchEvent.touches && touchEvent.touches.length > 0) {\r\n          this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\r\n          this._numActivePoints++;\r\n          if (touchEvent.touches.length > 1) {\r\n            this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\r\n            this._numActivePoints++;\r\n          }\r\n        }\r\n      } else {\r\n        // Mouse Event\r\n        this._convertEventPosToPoint(/** @type {PointerEvent} */ (e), this.p1);\r\n        if (pointerType === 'up') {\r\n          // clear all points on mouseup\r\n          this._numActivePoints = 0;\r\n        } else {\r\n          this._numActivePoints++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** update points that were used during previous rAF tick\r\n   * @private\r\n   */\r\n  _updatePrevPoints() {\r\n    equalizePoints(this.prevP1, this.p1);\r\n    equalizePoints(this.prevP2, this.p2);\r\n  }\r\n\r\n  /** update points at the start of gesture\r\n   * @private\r\n   */\r\n  _updateStartPoints() {\r\n    equalizePoints(this.startP1, this.p1);\r\n    equalizePoints(this.startP2, this.p2);\r\n    this._updatePrevPoints();\r\n  }\r\n\r\n  /** @private */\r\n  _calculateDragDirection() {\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      // if main scroll position is shifted – direction is always horizontal\r\n      this.dragAxis = 'x';\r\n    } else {\r\n      // calculate delta of the last touchmove tick\r\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\r\n\r\n      if (diff !== 0) {\r\n        // check if pointer was shifted horizontally or vertically\r\n        const axisToCheck = diff > 0 ? 'x' : 'y';\r\n\r\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\r\n          this.dragAxis = axisToCheck;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts touch, pointer or mouse event\r\n   * to PhotoSwipe point.\r\n   *\r\n   * @private\r\n   * @param {Touch | PointerEvent} e\r\n   * @param {Point} p\r\n   * @returns {Point}\r\n   */\r\n  _convertEventPosToPoint(e, p) {\r\n    p.x = e.pageX - this.pswp.offset.x;\r\n    p.y = e.pageY - this.pswp.offset.y;\r\n\r\n    if ('pointerId' in e) {\r\n      p.id = e.pointerId;\r\n    } else if (e.identifier !== undefined) {\r\n      p.id = e.identifier;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _onClick(e) {\r\n    // Do not allow click event to pass through after drag\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gestures;\r\n","import {\r\n  setTransform,\r\n  createElement,\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/slide.js').default} Slide */\r\n\r\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\r\n\r\nconst MAIN_SCROLL_END_FRICTION = 0.35;\r\n\r\n\r\n// const MIN_SWIPE_TRANSITION_DURATION = 250;\r\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\r\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\r\n\r\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\r\nclass MainScroll {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.x = 0;\r\n    this.slideWidth = 0;\r\n    /** @private */\r\n    this._currPositionIndex = 0;\r\n    /** @private */\r\n    this._prevPositionIndex = 0;\r\n    /** @private */\r\n    this._containerShiftIndex = -1;\r\n\r\n    /** @type {ItemHolder[]} */\r\n    this.itemHolders = [];\r\n  }\r\n\r\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {boolean} [resizeSlides] Whether slides content should resized\r\n   */\r\n  resize(resizeSlides) {\r\n    const { pswp } = this;\r\n    const newSlideWidth = Math.round(\r\n      pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing\r\n    );\r\n    // Mobile browsers might trigger a resize event during a gesture.\r\n    // (due to toolbar appearing or hiding).\r\n    // Avoid re-adjusting main scroll position if width wasn't changed\r\n    const slideWidthChanged = (newSlideWidth !== this.slideWidth);\r\n\r\n    if (slideWidthChanged) {\r\n      this.slideWidth = newSlideWidth;\r\n      this.moveTo(this.getCurrSlideX());\r\n    }\r\n\r\n    this.itemHolders.forEach((itemHolder, index) => {\r\n      if (slideWidthChanged) {\r\n        setTransform(itemHolder.el, (index + this._containerShiftIndex)\r\n                                    * this.slideWidth);\r\n      }\r\n\r\n      if (resizeSlides && itemHolder.slide) {\r\n        itemHolder.slide.resize();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reset X position of the main scroller to zero\r\n   */\r\n  resetPosition() {\r\n    // Position on the main scroller (offset)\r\n    // it is independent from slide index\r\n    this._currPositionIndex = 0;\r\n    this._prevPositionIndex = 0;\r\n\r\n    // This will force recalculation of size on next resize()\r\n    this.slideWidth = 0;\r\n\r\n    // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\r\n    this._containerShiftIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Create and append array of three items\r\n   * that hold data about slides in DOM\r\n   */\r\n  appendHolders() {\r\n    this.itemHolders = [];\r\n\r\n    // append our three slide holders -\r\n    // previous, current, and next\r\n    for (let i = 0; i < 3; i++) {\r\n      const el = createElement('pswp__item', 'div', this.pswp.container);\r\n      el.setAttribute('role', 'group');\r\n      el.setAttribute('aria-roledescription', 'slide');\r\n      el.setAttribute('aria-hidden', 'true');\r\n\r\n      // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\r\n      el.style.display = (i === 1) ? 'block' : 'none';\r\n\r\n      this.itemHolders.push({\r\n        el,\r\n        //index: -1\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n   * @returns {boolean}\r\n   */\r\n  canBeSwiped() {\r\n    return this.pswp.getNumItems() > 1;\r\n  }\r\n\r\n  /**\r\n   * Move main scroll by X amount of slides.\r\n   * For example:\r\n   *   `-1` will move to the previous slide,\r\n   *    `0` will reset the scroll position of the current slide,\r\n   *    `3` will move three slides forward\r\n   *\r\n   * If loop option is enabled - index will be automatically looped too,\r\n   * (for example `-1` will move to the last slide of the gallery).\r\n   *\r\n   * @param {number} diff\r\n   * @param {boolean} [animate]\r\n   * @param {number} [velocityX]\r\n   * @returns {boolean} whether index was changed or not\r\n   */\r\n  moveIndexBy(diff, animate, velocityX) {\r\n    const { pswp } = this;\r\n    let newIndex = pswp.potentialIndex + diff;\r\n    const numSlides = pswp.getNumItems();\r\n\r\n    if (pswp.canLoop()) {\r\n      newIndex = pswp.getLoopedIndex(newIndex);\r\n      const distance = (diff + numSlides) % numSlides;\r\n      if (distance <= numSlides / 2) {\r\n        // go forward\r\n        diff = distance;\r\n      } else {\r\n        // go backwards\r\n        diff = distance - numSlides;\r\n      }\r\n    } else {\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      } else if (newIndex >= numSlides) {\r\n        newIndex = numSlides - 1;\r\n      }\r\n      diff = newIndex - pswp.potentialIndex;\r\n    }\r\n\r\n    pswp.potentialIndex = newIndex;\r\n    this._currPositionIndex -= diff;\r\n\r\n    pswp.animations.stopMainScroll();\r\n\r\n    const destinationX = this.getCurrSlideX();\r\n    if (!animate) {\r\n      this.moveTo(destinationX);\r\n      this.updateCurrItem();\r\n    } else {\r\n      pswp.animations.startSpring({\r\n        isMainScroll: true,\r\n        start: this.x,\r\n        end: destinationX,\r\n        velocity: velocityX || 0,\r\n        naturalFrequency: 30,\r\n        dampingRatio: 1, //0.7,\r\n        onUpdate: (x) => {\r\n          this.moveTo(x);\r\n        },\r\n        onComplete: () => {\r\n          this.updateCurrItem();\r\n          pswp.appendHeavy();\r\n        }\r\n      });\r\n\r\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\r\n      if (pswp.canLoop()) {\r\n        const currDistance = (currDiff + numSlides) % numSlides;\r\n        if (currDistance <= numSlides / 2) {\r\n          // go forward\r\n          currDiff = currDistance;\r\n        } else {\r\n          // go backwards\r\n          currDiff = currDistance - numSlides;\r\n        }\r\n      }\r\n\r\n      // Force-append new slides during transition\r\n      // if difference between slides is more than 1\r\n      if (Math.abs(currDiff) > 1) {\r\n        this.updateCurrItem();\r\n      }\r\n    }\r\n\r\n    return Boolean(diff);\r\n  }\r\n\r\n  /**\r\n   * X position of the main scroll for the current slide\r\n   * (ignores position during dragging)\r\n   * @returns {number}\r\n   */\r\n  getCurrSlideX() {\r\n    return this.slideWidth * this._currPositionIndex;\r\n  }\r\n\r\n  /**\r\n   * Whether scroll position is shifted.\r\n   * For example, it will return true if the scroll is being dragged or animated.\r\n   * @returns {boolean}\r\n   */\r\n  isShifted() {\r\n    return this.x !== this.getCurrSlideX();\r\n  }\r\n\r\n  /**\r\n   * Update slides X positions and set their content\r\n   */\r\n  updateCurrItem() {\r\n    const { pswp } = this;\r\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\r\n\r\n    if (!positionDifference) {\r\n      return;\r\n    }\r\n\r\n    this._prevPositionIndex = this._currPositionIndex;\r\n\r\n    pswp.currIndex = pswp.potentialIndex;\r\n\r\n    let diffAbs = Math.abs(positionDifference);\r\n    /** @type {ItemHolder | undefined} */\r\n    let tempHolder;\r\n\r\n    if (diffAbs >= 3) {\r\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\r\n      diffAbs = 3;\r\n    }\r\n\r\n    for (let i = 0; i < diffAbs; i++) {\r\n      if (positionDifference > 0) {\r\n        tempHolder = this.itemHolders.shift();\r\n        if (tempHolder) {\r\n          this.itemHolders[2] = tempHolder; // move first to last\r\n\r\n          this._containerShiftIndex++;\r\n\r\n          setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex - diffAbs) + i + 2);\r\n        }\r\n      } else {\r\n        tempHolder = this.itemHolders.pop();\r\n        if (tempHolder) {\r\n          this.itemHolders.unshift(tempHolder); // move last to first\r\n\r\n          this._containerShiftIndex--;\r\n\r\n          setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex + diffAbs) - i - 2);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Reset transfrom every 50ish navigations in one direction.\r\n    //\r\n    // Otherwise transform will keep growing indefinitely,\r\n    // which might cause issues as browsers have a maximum transform limit.\r\n    // I wasn't able to reach it, but just to be safe.\r\n    // This should not cause noticable lag.\r\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\r\n      this.resetPosition();\r\n      this.resize();\r\n    }\r\n\r\n    // Pan transition might be running (and consntantly updating pan position)\r\n    pswp.animations.stopAllPan();\r\n\r\n    this.itemHolders.forEach((itemHolder, i) => {\r\n      if (itemHolder.slide) {\r\n        // Slide in the 2nd holder is always active\r\n        itemHolder.slide.setIsActive(i === 1);\r\n      }\r\n    });\r\n\r\n    pswp.currSlide = this.itemHolders[1]?.slide;\r\n    pswp.contentLoader.updateLazy(positionDifference);\r\n\r\n    if (pswp.currSlide) {\r\n      pswp.currSlide.applyCurrentZoomPan();\r\n    }\r\n\r\n    pswp.dispatch('change');\r\n  }\r\n\r\n  /**\r\n   * Move the X position of the main scroll container\r\n   *\r\n   * @param {number} x\r\n   * @param {boolean} [dragging]\r\n   */\r\n  moveTo(x, dragging) {\r\n    if (!this.pswp.canLoop() && dragging) {\r\n      // Apply friction\r\n      let newSlideIndexOffset = ((this.slideWidth * this._currPositionIndex) - x) / this.slideWidth;\r\n      newSlideIndexOffset += this.pswp.currIndex;\r\n      const delta = Math.round(x - this.x);\r\n\r\n      if ((newSlideIndexOffset < 0 && delta > 0)\r\n          || (newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0)) {\r\n        x = this.x + (delta * MAIN_SCROLL_END_FRICTION);\r\n      }\r\n    }\r\n\r\n    this.x = x;\r\n\r\n    if (this.pswp.container) {\r\n      setTransform(this.pswp.container, x);\r\n    }\r\n\r\n    this.pswp.dispatch('moveMainScroll', { x, dragging: dragging ?? false });\r\n  }\r\n}\r\n\r\nexport default MainScroll;\r\n","import { specialKeyUsed } from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Methods<T>} Methods<T>\r\n */\r\n\r\nconst KeyboardKeyCodesMap = {\r\n  Escape: 27,\r\n  z: 90,\r\n  ArrowLeft: 37,\r\n  ArrowUp: 38,\r\n  ArrowRight: 39,\r\n  ArrowDown: 40,\r\n  Tab: 9,\r\n};\r\n\r\n/**\r\n * @template {keyof KeyboardKeyCodesMap} T\r\n * @param {T} key\r\n * @param {boolean} isKeySupported\r\n * @returns {T | number | undefined}\r\n */\r\nconst getKeyboardEventKey = (key, isKeySupported) => {\r\n  return isKeySupported ? key : KeyboardKeyCodesMap[key];\r\n};\r\n\r\n/**\r\n * - Manages keyboard shortcuts.\r\n * - Helps trap focus within photoswipe.\r\n */\r\nclass Keyboard {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    /** @private */\r\n    this._wasFocused = false;\r\n\r\n    pswp.on('bindEvents', () => {\r\n      // Dialog was likely opened by keyboard if initial point is not defined\r\n      if (!pswp.options.initialPointerPos) {\r\n        // focus causes layout,\r\n        // which causes lag during the animation,\r\n        // that's why we delay it until the opener transition ends\r\n        this._focusRoot();\r\n      }\r\n\r\n      pswp.events.add(document, 'focusin', /** @type EventListener */(this._onFocusIn.bind(this)));\r\n      pswp.events.add(document, 'keydown', /** @type EventListener */(this._onKeyDown.bind(this)));\r\n    });\r\n\r\n    const lastActiveElement = /** @type {HTMLElement} */ (document.activeElement);\r\n    pswp.on('destroy', () => {\r\n      if (pswp.options.returnFocus\r\n          && lastActiveElement\r\n          && this._wasFocused) {\r\n        lastActiveElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  _focusRoot() {\r\n    if (!this._wasFocused && this.pswp.element) {\r\n      this.pswp.element.focus();\r\n      this._wasFocused = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  _onKeyDown(e) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('keydown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (specialKeyUsed(e)) {\r\n      // don't do anything if special key pressed\r\n      // to prevent from overriding default browser actions\r\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\r\n      return;\r\n    }\r\n\r\n    /** @type {Methods<PhotoSwipe> | undefined} */\r\n    let keydownAction;\r\n    /** @type {'x' | 'y' | undefined} */\r\n    let axis;\r\n    let isForward = false;\r\n    const isKeySupported = 'key' in e;\r\n\r\n    switch (isKeySupported ? e.key : e.keyCode) {\r\n      case getKeyboardEventKey('Escape', isKeySupported):\r\n        if (pswp.options.escKey) {\r\n          keydownAction = 'close';\r\n        }\r\n        break;\r\n      case getKeyboardEventKey('z', isKeySupported):\r\n        keydownAction = 'toggleZoom';\r\n        break;\r\n      case getKeyboardEventKey('ArrowLeft', isKeySupported):\r\n        axis = 'x';\r\n        break;\r\n      case getKeyboardEventKey('ArrowUp', isKeySupported):\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('ArrowRight', isKeySupported):\r\n        axis = 'x';\r\n        isForward = true;\r\n        break;\r\n      case getKeyboardEventKey('ArrowDown', isKeySupported):\r\n        isForward = true;\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('Tab', isKeySupported):\r\n        this._focusRoot();\r\n        break;\r\n      default:\r\n    }\r\n\r\n    // if left/right/top/bottom key\r\n    if (axis) {\r\n      // prevent page scroll\r\n      e.preventDefault();\r\n\r\n      const { currSlide } = pswp;\r\n\r\n      if (pswp.options.arrowKeys\r\n          && axis === 'x'\r\n          && pswp.getNumItems() > 1) {\r\n        keydownAction = isForward ? 'next' : 'prev';\r\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\r\n        // up/down arrow keys pan the image vertically\r\n        // left/right arrow keys pan horizontally.\r\n        // Unless there is only one image,\r\n        // or arrowKeys option is disabled\r\n        currSlide.pan[axis] += isForward ? -80 : 80;\r\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\r\n      }\r\n    }\r\n\r\n    if (keydownAction) {\r\n      e.preventDefault();\r\n      // @ts-ignore\r\n      pswp[keydownAction]();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trap focus inside photoswipe\r\n   *\r\n   * @private\r\n   * @param {FocusEvent} e\r\n   */\r\n  _onFocusIn(e) {\r\n    const { template } = this.pswp;\r\n    if (template\r\n        && document !== e.target\r\n        && template !== e.target\r\n        && !template.contains(/** @type {Node} */ (e.target))) {\r\n      // focus root element\r\n      template.focus();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n","import { setTransitionStyle, removeTransitionStyle } from './util.js';\r\n\r\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/** @typedef {Object} DefaultCssAnimationProps\r\n *\r\n * @prop {HTMLElement} target\r\n * @prop {number} [duration]\r\n * @prop {string} [easing]\r\n * @prop {string} [transform]\r\n * @prop {string} [opacity]\r\n * */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultCssAnimationProps} CssAnimationProps */\r\n\r\n/**\r\n * Runs CSS transition.\r\n */\r\nclass CSSAnimation {\r\n  /**\r\n   * onComplete can be unpredictable, be careful about current state\r\n   *\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    const {\r\n      target,\r\n      onComplete,\r\n      transform,\r\n      onFinish = () => {},\r\n      duration = 333,\r\n      easing = DEFAULT_EASING,\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    // support only transform and opacity\r\n    const prop = transform ? 'transform' : 'opacity';\r\n    const propValue = props[prop] ?? '';\r\n\r\n    /** @private */\r\n    this._target = target;\r\n    /** @private */\r\n    this._onComplete = onComplete;\r\n    /** @private */\r\n    this._finished = false;\r\n\r\n    /** @private */\r\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\r\n\r\n    // Using timeout hack to make sure that animation\r\n    // starts even if the animated property was changed recently,\r\n    // otherwise transitionend might not fire or transition won't start.\r\n    // https://drafts.csswg.org/css-transitions/#starting\r\n    //\r\n    // ¯\\_(ツ)_/¯\r\n    /** @private */\r\n    this._helperTimeout = setTimeout(() => {\r\n      setTransitionStyle(target, prop, duration, easing);\r\n      this._helperTimeout = setTimeout(() => {\r\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\r\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false);\r\n\r\n        // Safari occasionally does not emit transitionend event\r\n        // if element property was modified during the transition,\r\n        // which may be caused by resize or third party component,\r\n        // using timeout as a safety fallback\r\n        this._helperTimeout = setTimeout(() => {\r\n          this._finalizeAnimation();\r\n        }, duration + 500);\r\n        target.style[prop] = propValue;\r\n      }, 30); // Do not reduce this number\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TransitionEvent} e\r\n   */\r\n  _onTransitionEnd(e) {\r\n    if (e.target === this._target) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finalizeAnimation() {\r\n    if (!this._finished) {\r\n      this._finished = true;\r\n      this.onFinish();\r\n      if (this._onComplete) {\r\n        this._onComplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._helperTimeout) {\r\n      clearTimeout(this._helperTimeout);\r\n    }\r\n    removeTransitionStyle(this._target);\r\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\r\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\r\n    if (!this._finished) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default CSSAnimation;\r\n","const DEFAULT_NATURAL_FREQUENCY = 12;\r\nconst DEFAULT_DAMPING_RATIO = 0.75;\r\n\r\n/**\r\n * Spring easing helper\r\n */\r\nclass SpringEaser {\r\n  /**\r\n   * @param {number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {number} [dampingRatio]\r\n   * Determines how bouncy animation will be.\r\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   * \"overshoot\" refers to part of animation that\r\n   * goes beyond the final value.\r\n   *\r\n   * @param {number} [naturalFrequency]\r\n   * Determines how fast animation will slow down.\r\n   * The higher value - the stiffer the transition will be,\r\n   * and the faster it will slow down.\r\n   * Recommended value from 10 to 50\r\n   */\r\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\r\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\r\n\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO;\r\n\r\n    // https://en.wikipedia.org/wiki/Natural_frequency\r\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\r\n\r\n    this._dampedFrequency = this._naturalFrequency;\r\n\r\n    if (this._dampingRatio < 1) {\r\n      this._dampedFrequency *= Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} deltaPosition Difference between current and end position of the animation\r\n   * @param {number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {number} Displacement, relative to the end position.\r\n   */\r\n  easeFrame(deltaPosition, deltaTime) {\r\n    // Inspired by Apple Webkit and Android spring function implementation\r\n    // https://en.wikipedia.org/wiki/Oscillation\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    // we ignore mass (assume that it's 1kg)\r\n\r\n    let displacement = 0;\r\n    let coeff;\r\n\r\n    deltaTime /= 1000;\r\n\r\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\r\n\r\n    if (this._dampingRatio === 1) {\r\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\r\n\r\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency) + coeff\r\n                        * naturalDumpingPow;\r\n    } else if (this._dampingRatio < 1) {\r\n      coeff = (1 / this._dampedFrequency)\r\n                * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\r\n\r\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\r\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\r\n\r\n      displacement = naturalDumpingPow\r\n                       * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency)\r\n                        * this._dampingRatio\r\n                        + naturalDumpingPow\r\n                        * (-this._dampedFrequency * deltaPosition * dumpedFSin\r\n                        + this._dampedFrequency * coeff * dumpedFCos);\r\n    }\r\n\r\n    // Overdamped (>1) damping ratio is not supported\r\n\r\n    return displacement;\r\n  }\r\n}\r\n\r\nexport default SpringEaser;\r\n","import SpringEaser from './spring-easer.js';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/**\r\n * @typedef {Object} DefaultSpringAnimationProps\r\n *\r\n * @prop {number} start\r\n * @prop {number} end\r\n * @prop {number} velocity\r\n * @prop {number} [dampingRatio]\r\n * @prop {number} [naturalFrequency]\r\n * @prop {(end: number) => void} onUpdate\r\n */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultSpringAnimationProps} SpringAnimationProps */\r\n\r\nclass SpringAnimation {\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    this._raf = 0;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      velocity,\r\n      onUpdate,\r\n      onComplete,\r\n      onFinish = () => {},\r\n      dampingRatio,\r\n      naturalFrequency\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\r\n    let prevTime = Date.now();\r\n    let deltaPosition = start - end;\r\n\r\n    const animationLoop = () => {\r\n      if (this._raf) {\r\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime);\r\n\r\n        // Stop the animation if velocity is low and position is close to end\r\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\r\n          // Finalize the animation\r\n          onUpdate(end);\r\n          if (onComplete) {\r\n            onComplete();\r\n          }\r\n          this.onFinish();\r\n        } else {\r\n          prevTime = Date.now();\r\n          onUpdate(deltaPosition + end);\r\n          this._raf = requestAnimationFrame(animationLoop);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._raf = requestAnimationFrame(animationLoop);\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._raf >= 0) {\r\n      cancelAnimationFrame(this._raf);\r\n    }\r\n    this._raf = 0;\r\n  }\r\n}\r\n\r\nexport default SpringAnimation;\r\n","import CSSAnimation from './css-animation.js';\r\nimport SpringAnimation from './spring-animation.js';\r\n\r\n/** @typedef {import('./css-animation.js').CssAnimationProps} CssAnimationProps */\r\n/** @typedef {import('./spring-animation.js').SpringAnimationProps} SpringAnimationProps */\r\n\r\n/** @typedef {Object} SharedAnimationProps\r\n * @prop {string} [name]\r\n * @prop {boolean} [isPan]\r\n * @prop {boolean} [isMainScroll]\r\n * @prop {VoidFunction} [onComplete]\r\n * @prop {VoidFunction} [onFinish]\r\n */\r\n\r\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\r\n/** @typedef {SpringAnimationProps | CssAnimationProps} AnimationProps */\r\n\r\n/**\r\n * Manages animations\r\n */\r\nclass Animations {\r\n  constructor() {\r\n    /** @type {Animation[]} */\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  startSpring(props) {\r\n    this._start(props, true);\r\n  }\r\n\r\n  /**\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  startTransition(props) {\r\n    this._start(props);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {AnimationProps} props\r\n   * @param {boolean} [isSpring]\r\n   * @returns {Animation}\r\n   */\r\n  _start(props, isSpring) {\r\n    const animation = isSpring\r\n      ? new SpringAnimation(/** @type SpringAnimationProps */ (props))\r\n      : new CSSAnimation(/** @type CssAnimationProps */ (props));\r\n\r\n    this.activeAnimations.push(animation);\r\n    animation.onFinish = () => this.stop(animation);\r\n\r\n    return animation;\r\n  }\r\n\r\n  /**\r\n   * @param {Animation} animation\r\n   */\r\n  stop(animation) {\r\n    animation.destroy();\r\n    const index = this.activeAnimations.indexOf(animation);\r\n    if (index > -1) {\r\n      this.activeAnimations.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  stopAll() { // _stopAllAnimations\r\n    this.activeAnimations.forEach((animation) => {\r\n      animation.destroy();\r\n    });\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * Stop all pan or zoom transitions\r\n   */\r\n  stopAllPan() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isPan) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  stopMainScroll() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isMainScroll) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if main scroll transition is running\r\n   */\r\n  // isMainScrollRunning() {\r\n  //   return this.activeAnimations.some((animation) => {\r\n  //     return animation.props.isMainScroll;\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Returns true if any pan or zoom transition is running\r\n   */\r\n  isPanRunning() {\r\n    return this.activeAnimations.some((animation) => {\r\n      return animation.props.isPan;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Animations;\r\n","/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\r\nclass ScrollWheel {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    pswp.events.add(pswp.element, 'wheel', /** @type EventListener */(this._onWheel.bind(this)));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {WheelEvent} e\r\n   */\r\n  _onWheel(e) {\r\n    e.preventDefault();\r\n    const { currSlide } = this.pswp;\r\n    let { deltaX, deltaY } = e;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('wheel', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\r\n      // zoom\r\n      if (currSlide.isZoomable()) {\r\n        let zoomFactor = -deltaY;\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          zoomFactor *= 0.05;\r\n        } else {\r\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\r\n        }\r\n        zoomFactor = 2 ** zoomFactor;\r\n\r\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\r\n        currSlide.zoomTo(destZoomLevel, {\r\n          x: e.clientX,\r\n          y: e.clientY\r\n        });\r\n      }\r\n    } else {\r\n      // pan\r\n      if (currSlide.isPannable()) {\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          // 18 - average line height\r\n          deltaX *= 18;\r\n          deltaY *= 18;\r\n        }\r\n\r\n        currSlide.panTo(\r\n          currSlide.pan.x - deltaX,\r\n          currSlide.pan.y - deltaY\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScrollWheel;\r\n","import { createElement } from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Methods<T>} Methods<T>\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementMarkupProps\r\n * @prop {boolean} [isCustomSVG]\r\n * @prop {string} inner\r\n * @prop {string} [outlineID]\r\n * @prop {number | string} [size]\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementData\r\n * @prop {DefaultUIElements | string} [name]\r\n * @prop {string} [className]\r\n * @prop {UIElementMarkup} [html]\r\n * @prop {boolean} [isButton]\r\n * @prop {keyof HTMLElementTagNameMap} [tagName]\r\n * @prop {string} [title]\r\n * @prop {string} [ariaLabel]\r\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\r\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\r\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\r\n * @prop {number} [order]\r\n */\r\n\r\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\r\n\r\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\r\n\r\n/**\r\n * @param {UIElementMarkup} [htmlData]\r\n * @returns {string}\r\n */\r\nfunction addElementHTML(htmlData) {\r\n  if (typeof htmlData === 'string') {\r\n    // Allow developers to provide full svg,\r\n    // For example:\r\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\r\n    //   <path d=\"...\" />\r\n    //   <circle ... />\r\n    // </svg>\r\n    // Can also be any HTML string.\r\n    return htmlData;\r\n  }\r\n\r\n  if (!htmlData || !htmlData.isCustomSVG) {\r\n    return '';\r\n  }\r\n\r\n  const svgData = htmlData;\r\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">';\r\n  // replace all %d with size\r\n  out = out.split('%d').join(/** @type {string} */ (svgData.size || 32));\r\n\r\n  // Icons may contain outline/shadow,\r\n  // to make it we \"clone\" base icon shape and add border to it.\r\n  // Icon itself and border are styled via CSS.\r\n  //\r\n  // Property shadowID defines ID of element that should be cloned.\r\n  if (svgData.outlineID) {\r\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\r\n  }\r\n\r\n  out += svgData.inner;\r\n\r\n  out += '</svg>';\r\n\r\n  return out;\r\n}\r\n\r\nclass UIElement {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   * @param {UIElementData} data\r\n   */\r\n  constructor(pswp, data) {\r\n    const name = data.name || data.className;\r\n    let elementHTML = data.html;\r\n\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (pswp.options[name] === false) {\r\n      // exit if element is disabled from options\r\n      return;\r\n    }\r\n\r\n    // Allow to override SVG icons from options\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\r\n      // arrowPrevSVG\r\n      // arrowNextSVG\r\n      // closeSVG\r\n      // zoomSVG\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      elementHTML = pswp.options[name + 'SVG'];\r\n    }\r\n\r\n    pswp.dispatch('uiElementCreate', { data });\r\n\r\n    let className = '';\r\n    if (data.isButton) {\r\n      className += 'pswp__button ';\r\n      className += (data.className || `pswp__button--${data.name}`);\r\n    } else {\r\n      className += (data.className || `pswp__${data.name}`);\r\n    }\r\n\r\n    let tagName = data.isButton ? (data.tagName || 'button') : (data.tagName || 'div');\r\n    tagName = /** @type {keyof HTMLElementTagNameMap} */ (tagName.toLowerCase());\r\n    /** @type {HTMLElement} */\r\n    const element = createElement(className, tagName);\r\n\r\n    if (data.isButton) {\r\n      if (tagName === 'button') {\r\n        /** @type {HTMLButtonElement} */ (element).type = 'button';\r\n      }\r\n\r\n      let { title } = data;\r\n      const { ariaLabel } = data;\r\n\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      if (typeof pswp.options[name + 'Title'] === 'string') {\r\n        // @ts-expect-error lookup only by `data.name` maybe?\r\n        title = pswp.options[name + 'Title'];\r\n      }\r\n\r\n      if (title) {\r\n        element.title = title;\r\n      }\r\n\r\n      const ariaText = ariaLabel || title;\r\n      if (ariaText) {\r\n        element.setAttribute('aria-label', ariaText);\r\n      }\r\n    }\r\n\r\n    element.innerHTML = addElementHTML(elementHTML);\r\n\r\n    if (data.onInit) {\r\n      data.onInit(element, pswp);\r\n    }\r\n\r\n    if (data.onClick) {\r\n      element.onclick = (e) => {\r\n        if (typeof data.onClick === 'string') {\r\n          // @ts-ignore\r\n          pswp[data.onClick]();\r\n        } else if (typeof data.onClick === 'function') {\r\n          data.onClick(e, element, pswp);\r\n        }\r\n      };\r\n    }\r\n\r\n    // Top bar is default position\r\n    const appendTo = data.appendTo || 'bar';\r\n    /** @type {HTMLElement | undefined} root element by default */\r\n    let container = pswp.element;\r\n    if (appendTo === 'bar') {\r\n      if (!pswp.topBar) {\r\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\r\n      }\r\n      container = pswp.topBar;\r\n    } else {\r\n      // element outside of top bar gets a secondary class\r\n      // that makes element fade out on close\r\n      element.classList.add('pswp__hide-on-close');\r\n\r\n      if (appendTo === 'wrapper') {\r\n        container = pswp.scrollWrap;\r\n      }\r\n    }\r\n\r\n    container?.appendChild(pswp.applyFilters('uiElement', element, data));\r\n  }\r\n}\r\n\r\nexport default UIElement;\r\n","/*\r\n  Backward and forward arrow buttons\r\n */\r\n\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {PhotoSwipe} pswp\r\n * @param {boolean} [isNextButton]\r\n */\r\nfunction initArrowButton(element, pswp, isNextButton) {\r\n  element.classList.add('pswp__button--arrow');\r\n  // TODO: this should point to a unique id for this instance\r\n  element.setAttribute('aria-controls', 'pswp__items');\r\n  pswp.on('change', () => {\r\n    if (!pswp.options.loop) {\r\n      if (isNextButton) {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\r\n      } else {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex > 0);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowPrev = {\r\n  name: 'arrowPrev',\r\n  className: 'pswp__button--arrow--prev',\r\n  title: 'Previous',\r\n  order: 10,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'prev',\r\n  onInit: initArrowButton\r\n};\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowNext = {\r\n  name: 'arrowNext',\r\n  className: 'pswp__button--arrow--next',\r\n  title: 'Next',\r\n  order: 11,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'next',\r\n  onInit: (el, pswp) => {\r\n    initArrowButton(el, pswp, true);\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst closeButton = {\r\n  name: 'close',\r\n  title: 'Close',\r\n  order: 20,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\r\n    outlineID: 'pswp__icn-close'\r\n  },\r\n  onClick: 'close'\r\n};\r\n\r\nexport default closeButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst zoomButton = {\r\n  name: 'zoom',\r\n  title: 'Zoom',\r\n  order: 10,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\r\n    outlineID: 'pswp__icn-zoom'\r\n  },\r\n  onClick: 'toggleZoom'\r\n};\r\n\r\nexport default zoomButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const loadingIndicator = {\r\n  name: 'preloader',\r\n  appendTo: 'bar',\r\n  order: 7,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\r\n    outlineID: 'pswp__icn-loading'\r\n  },\r\n  onInit: (indicatorElement, pswp) => {\r\n    /** @type {boolean | undefined} */\r\n    let isVisible;\r\n    /** @type {NodeJS.Timeout | null} */\r\n    let delayTimeout = null;\r\n\r\n    /**\r\n     * @param {string} className\r\n     * @param {boolean} add\r\n     */\r\n    const toggleIndicatorClass = (className, add) => {\r\n      indicatorElement.classList.toggle('pswp__preloader--' + className, add);\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} visible\r\n     */\r\n    const setIndicatorVisibility = (visible) => {\r\n      if (isVisible !== visible) {\r\n        isVisible = visible;\r\n        toggleIndicatorClass('active', visible);\r\n      }\r\n    };\r\n\r\n    const updatePreloaderVisibility = () => {\r\n      if (!pswp.currSlide?.content.isLoading()) {\r\n        setIndicatorVisibility(false);\r\n        if (delayTimeout) {\r\n          clearTimeout(delayTimeout);\r\n          delayTimeout = null;\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!delayTimeout) {\r\n        // display loading indicator with delay\r\n        delayTimeout = setTimeout(() => {\r\n          setIndicatorVisibility(Boolean(pswp.currSlide?.content.isLoading()));\r\n          delayTimeout = null;\r\n        }, pswp.options.preloaderDelay);\r\n      }\r\n    };\r\n\r\n    pswp.on('change', updatePreloaderVisibility);\r\n\r\n    pswp.on('loadComplete', (e) => {\r\n      if (pswp.currSlide === e.slide) {\r\n        updatePreloaderVisibility();\r\n      }\r\n    });\r\n\r\n    // expose the method\r\n    if (pswp.ui) {\r\n      pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\r\n    }\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const counterIndicator = {\r\n  name: 'counter',\r\n  order: 5,\r\n  onInit: (counterElement, pswp) => {\r\n    pswp.on('change', () => {\r\n      counterElement.innerText = (pswp.currIndex + 1)\r\n                                  + pswp.options.indexIndicatorSep\r\n                                  + pswp.getNumItems();\r\n    });\r\n  }\r\n};\r\n","import UIElement from './ui-element.js';\r\nimport { arrowPrev, arrowNext } from './button-arrow.js';\r\nimport closeButton from './button-close.js';\r\nimport zoomButton from './button-zoom.js';\r\nimport { loadingIndicator } from './loading-indicator.js';\r\nimport { counterIndicator } from './counter-indicator.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n\r\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default, it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {boolean} isZoomedIn\r\n */\r\nfunction setZoomedIn(el, isZoomedIn) {\r\n  el.classList.toggle('pswp--zoomed-in', isZoomedIn);\r\n}\r\n\r\nclass UI {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isRegistered = false;\r\n    /** @type {UIElementData[]} */\r\n    this.uiElementsData = [];\r\n    /** @type {(UIElement | UIElementData)[]} */\r\n    this.items = [];\r\n    /** @type {() => void} */\r\n    this.updatePreloaderVisibility = () => {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number | undefined}\r\n     */\r\n    this._lastUpdatedZoomLevel = undefined;\r\n  }\r\n\r\n  init() {\r\n    const { pswp } = this;\r\n    this.isRegistered = false;\r\n    this.uiElementsData = [\r\n      closeButton,\r\n      arrowPrev,\r\n      arrowNext,\r\n      zoomButton,\r\n      loadingIndicator,\r\n      counterIndicator\r\n    ];\r\n\r\n    pswp.dispatch('uiRegister');\r\n\r\n    // sort by order\r\n    this.uiElementsData.sort((a, b) => {\r\n      // default order is 0\r\n      return (a.order || 0) - (b.order || 0);\r\n    });\r\n\r\n    this.items = [];\r\n\r\n    this.isRegistered = true;\r\n    this.uiElementsData.forEach((uiElementData) => {\r\n      this.registerElement(uiElementData);\r\n    });\r\n\r\n    pswp.on('change', () => {\r\n      pswp.element?.classList.toggle('pswp--one-slide', pswp.getNumItems() === 1);\r\n    });\r\n\r\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\r\n  }\r\n\r\n  /**\r\n   * @param {UIElementData} elementData\r\n   */\r\n  registerElement(elementData) {\r\n    if (this.isRegistered) {\r\n      this.items.push(\r\n        new UIElement(this.pswp, elementData)\r\n      );\r\n    } else {\r\n      this.uiElementsData.push(elementData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired each time zoom or pan position is changed.\r\n   * Update classes that control visibility of zoom button and cursor icon.\r\n   *\r\n   * @private\r\n   */\r\n  _onZoomPanUpdate() {\r\n    const { template, currSlide, options } = this.pswp;\r\n\r\n    if (this.pswp.opener.isClosing || !template || !currSlide) {\r\n      return;\r\n    }\r\n\r\n    let { currZoomLevel } = currSlide;\r\n\r\n    // if not open yet - check against initial zoom level\r\n    if (!this.pswp.opener.isOpen) {\r\n      currZoomLevel = currSlide.zoomLevels.initial;\r\n    }\r\n\r\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\r\n      return;\r\n    }\r\n    this._lastUpdatedZoomLevel = currZoomLevel;\r\n\r\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary;\r\n\r\n    // Initial and secondary zoom levels are almost equal\r\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\r\n      // disable zoom\r\n      setZoomedIn(template, false);\r\n      template.classList.remove('pswp--zoom-allowed');\r\n      return;\r\n    }\r\n\r\n    template.classList.add('pswp--zoom-allowed');\r\n\r\n    const potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial\r\n      ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\r\n\r\n    setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\r\n\r\n    if (options.imageClickAction === 'zoom'\r\n        || options.imageClickAction === 'zoom-or-close') {\r\n      template.classList.add('pswp--click-to-zoom');\r\n    }\r\n  }\r\n}\r\n\r\nexport default UI;\r\n","/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns Bounds\r\n */\r\nfunction getBoundsByElement(el) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n  return {\r\n    x: thumbAreaRect.left,\r\n    y: thumbAreaRect.top,\r\n    w: thumbAreaRect.width\r\n  };\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {number} imageWidth\r\n * @param {number} imageHeight\r\n * @returns Bounds\r\n */\r\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n\r\n  // fill image into the area\r\n  // (do they same as object-fit:cover does to retrieve coordinates)\r\n  const hRatio = thumbAreaRect.width / imageWidth;\r\n  const vRatio = thumbAreaRect.height / imageHeight;\r\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\r\n\r\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\r\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\r\n\r\n  /**\r\n   * Coordinates of the image,\r\n   * as if it was not cropped,\r\n   * height is calculated automatically\r\n   *\r\n   * @type {Bounds}\r\n   */\r\n  const bounds = {\r\n    x: thumbAreaRect.left + offsetX,\r\n    y: thumbAreaRect.top + offsetY,\r\n    w: imageWidth * fillZoomLevel\r\n  };\r\n\r\n  // Coordinates of inner crop area\r\n  // relative to the image\r\n  bounds.innerRect = {\r\n    w: thumbAreaRect.width,\r\n    h: thumbAreaRect.height,\r\n    x: offsetX,\r\n    y: offsetY\r\n  };\r\n\r\n  return bounds;\r\n}\r\n\r\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {number} index\r\n * @param {SlideData} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns {Bounds | undefined}\r\n */\r\nexport function getThumbBounds(index, itemData, instance) {\r\n  // legacy event, before filters were introduced\r\n  const event = instance.dispatch('thumbBounds', {\r\n    index,\r\n    itemData,\r\n    instance\r\n  });\r\n  // @ts-expect-error\r\n  if (event.thumbBounds) {\r\n    // @ts-expect-error\r\n    return event.thumbBounds;\r\n  }\r\n\r\n  const { element } = itemData;\r\n  /** @type {Bounds | undefined} */\r\n  let thumbBounds;\r\n  /** @type {HTMLElement | null | undefined} */\r\n  let thumbnail;\r\n\r\n  if (element && instance.options.thumbSelector !== false) {\r\n    const thumbSelector = instance.options.thumbSelector || 'img';\r\n    thumbnail = element.matches(thumbSelector)\r\n      ? element : /** @type {HTMLElement | null} */ (element.querySelector(thumbSelector));\r\n  }\r\n\r\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\r\n\r\n  if (thumbnail) {\r\n    if (!itemData.thumbCropped) {\r\n      thumbBounds = getBoundsByElement(thumbnail);\r\n    } else {\r\n      thumbBounds = getCroppedBoundsByElement(\r\n        thumbnail,\r\n        itemData.width || itemData.w || 0,\r\n        itemData.height || itemData.h || 0\r\n      );\r\n    }\r\n  }\r\n\r\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\r\n}\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  setTransform,\r\n  equalizePoints,\r\n  decodeImage,\r\n  toTransformString\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\r\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\r\n\r\n// some browsers do not paint\r\n// elements which opacity is set to 0,\r\n// since we need to pre-render elements for the animation -\r\n// we set it to the minimum amount\r\nconst MIN_OPACITY = 0.003;\r\n\r\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\r\nclass Opener {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isClosed = true;\r\n    this.isOpen = false;\r\n    this.isClosing = false;\r\n    this.isOpening = false;\r\n    /**\r\n     * @private\r\n     * @type {number | false | undefined}\r\n     */\r\n    this._duration = undefined;\r\n    /** @private */\r\n    this._useAnimation = false;\r\n    /** @private */\r\n    this._croppedZoom = false;\r\n    /** @private */\r\n    this._animateRootOpacity = false;\r\n    /** @private */\r\n    this._animateBgOpacity = false;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | HTMLImageElement | null | undefined }\r\n     */\r\n    this._placeholder = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._opacityElement = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._cropContainer1 = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLElement | null | undefined }\r\n     */\r\n    this._cropContainer2 = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Bounds | undefined}\r\n     */\r\n    this._thumbBounds = undefined;\r\n\r\n\r\n    this._prepareOpen = this._prepareOpen.bind(this);\r\n\r\n    // Override initial zoom and pan position\r\n    pswp.on('firstZoomPan', this._prepareOpen);\r\n  }\r\n\r\n  open() {\r\n    this._prepareOpen();\r\n    this._start();\r\n  }\r\n\r\n  close() {\r\n    if (this.isClosed || this.isClosing || this.isOpening) {\r\n      // if we close during opening animation\r\n      // for now do nothing,\r\n      // browsers aren't good at changing the direction of the CSS transition\r\n      return;\r\n    }\r\n\r\n    const slide = this.pswp.currSlide;\r\n\r\n    this.isOpen = false;\r\n    this.isOpening = false;\r\n    this.isClosing = true;\r\n    this._duration = this.pswp.options.hideAnimationDuration;\r\n\r\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._applyStartProps();\r\n    setTimeout(() => {\r\n      this._start();\r\n    }, this._croppedZoom ? 30 : 0);\r\n  }\r\n\r\n  /** @private */\r\n  _prepareOpen() {\r\n    this.pswp.off('firstZoomPan', this._prepareOpen);\r\n    if (!this.isOpening) {\r\n      const slide = this.pswp.currSlide;\r\n      this.isOpening = true;\r\n      this.isClosing = false;\r\n      this._duration = this.pswp.options.showAnimationDuration;\r\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n        this._duration = 0;\r\n      }\r\n      this._applyStartProps();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _applyStartProps() {\r\n    const { pswp } = this;\r\n    const slide = this.pswp.currSlide;\r\n    const { options } = pswp;\r\n\r\n    if (options.showHideAnimationType === 'fade') {\r\n      options.showHideOpacity = true;\r\n      this._thumbBounds = undefined;\r\n    } else if (options.showHideAnimationType === 'none') {\r\n      options.showHideOpacity = false;\r\n      this._duration = 0;\r\n      this._thumbBounds = undefined;\r\n    } else if (this.isOpening && pswp._initialThumbBounds) {\r\n      // Use initial bounds if defined\r\n      this._thumbBounds = pswp._initialThumbBounds;\r\n    } else {\r\n      this._thumbBounds = this.pswp.getThumbBounds();\r\n    }\r\n\r\n    this._placeholder = slide?.getPlaceholderElement();\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Discard animations when duration is less than 50ms\r\n    this._useAnimation = Boolean(this._duration && this._duration > 50);\r\n    this._animateZoom = Boolean(this._thumbBounds)\r\n                        && slide?.content.usePlaceholder()\r\n                        && (!this.isClosing || !pswp.mainScroll.isShifted());\r\n    if (!this._animateZoom) {\r\n      this._animateRootOpacity = true;\r\n\r\n      if (this.isOpening && slide) {\r\n        slide.zoomAndPanToInitial();\r\n        slide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      this._animateRootOpacity = options.showHideOpacity ?? false;\r\n    }\r\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\r\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\r\n\r\n    if (!this._useAnimation) {\r\n      this._duration = 0;\r\n      this._animateZoom = false;\r\n      this._animateBgOpacity = false;\r\n      this._animateRootOpacity = true;\r\n      if (this.isOpening) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\r\n      // Properties are used when animation from cropped thumbnail\r\n      this._croppedZoom = true;\r\n      this._cropContainer1 = this.pswp.container;\r\n      this._cropContainer2 = this.pswp.currSlide?.holderElement;\r\n\r\n      if (pswp.container) {\r\n        pswp.container.style.overflow = 'hidden';\r\n        pswp.container.style.width = pswp.viewportSize.x + 'px';\r\n      }\r\n    } else {\r\n      this._croppedZoom = false;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n      // Apply styles before opening transition\r\n      if (this._animateRootOpacity) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      } else {\r\n        if (this._animateBgOpacity && pswp.bg) {\r\n          pswp.bg.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = '1';\r\n        }\r\n      }\r\n\r\n      if (this._animateZoom) {\r\n        this._setClosedStateZoomPan();\r\n        if (this._placeholder) {\r\n          // tell browser that we plan to animate the placeholder\r\n          this._placeholder.style.willChange = 'transform';\r\n\r\n          // hide placeholder to allow hiding of\r\n          // elements that overlap it (such as icons over the thumbnail)\r\n          this._placeholder.style.opacity = String(MIN_OPACITY);\r\n        }\r\n      }\r\n    } else if (this.isClosing) {\r\n      // hide nearby slides to make sure that\r\n      // they are not painted during the transition\r\n      if (pswp.mainScroll.itemHolders[0]) {\r\n        pswp.mainScroll.itemHolders[0].el.style.display = 'none';\r\n      }\r\n      if (pswp.mainScroll.itemHolders[2]) {\r\n        pswp.mainScroll.itemHolders[2].el.style.display = 'none';\r\n      }\r\n\r\n      if (this._croppedZoom) {\r\n        if (pswp.mainScroll.x !== 0) {\r\n          // shift the main scroller to zero position\r\n          pswp.mainScroll.resetPosition();\r\n          pswp.mainScroll.resize();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _start() {\r\n    if (this.isOpening\r\n        && this._useAnimation\r\n        && this._placeholder\r\n        && this._placeholder.tagName === 'IMG') {\r\n      // To ensure smooth animation\r\n      // we wait till the current slide image placeholder is decoded,\r\n      // but no longer than 250ms,\r\n      // and no shorter than 50ms\r\n      // (just using requestanimationframe is not enough in Firefox,\r\n      // for some reason)\r\n      new Promise((resolve) => {\r\n        let decoded = false;\r\n        let isDelaying = true;\r\n        decodeImage(/** @type {HTMLImageElement} */ (this._placeholder)).finally(() => {\r\n          decoded = true;\r\n          if (!isDelaying) {\r\n            resolve(true);\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          isDelaying = false;\r\n          if (decoded) {\r\n            resolve(true);\r\n          }\r\n        }, 50);\r\n        setTimeout(resolve, 250);\r\n      }).finally(() => this._initiate());\r\n    } else {\r\n      this._initiate();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _initiate() {\r\n    this.pswp.element?.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\r\n\r\n    this.pswp.dispatch(\r\n      this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'\r\n    );\r\n\r\n    // legacy event\r\n    this.pswp.dispatch(\r\n      /** @type {'initialZoomIn' | 'initialZoomOut'} */\r\n      ('initialZoom' + (this.isOpening ? 'In' : 'Out'))\r\n    );\r\n\r\n    this.pswp.element?.classList.toggle('pswp--ui-visible', this.isOpening);\r\n\r\n    if (this.isOpening) {\r\n      if (this._placeholder) {\r\n        // unhide the placeholder\r\n        this._placeholder.style.opacity = '1';\r\n      }\r\n      this._animateToOpenState();\r\n    } else if (this.isClosing) {\r\n      this._animateToClosedState();\r\n    }\r\n\r\n    if (!this._useAnimation) {\r\n      this._onAnimationComplete();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _onAnimationComplete() {\r\n    const { pswp } = this;\r\n    this.isOpen = this.isOpening;\r\n    this.isClosed = this.isClosing;\r\n    this.isOpening = false;\r\n    this.isClosing = false;\r\n\r\n    pswp.dispatch(\r\n      this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'\r\n    );\r\n\r\n    // legacy event\r\n    pswp.dispatch(\r\n      /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\r\n      ('initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'))\r\n    );\r\n\r\n    if (this.isClosed) {\r\n      pswp.destroy();\r\n    } else if (this.isOpen) {\r\n      if (this._animateZoom && pswp.container) {\r\n        pswp.container.style.overflow = 'visible';\r\n        pswp.container.style.width = '100%';\r\n      }\r\n      pswp.currSlide?.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToOpenState() {\r\n    const { pswp } = this;\r\n    if (this._animateZoom) {\r\n      if (this._croppedZoom && this._cropContainer1 && this._cropContainer2) {\r\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\r\n        this._animateTo(this._cropContainer2, 'transform', 'none');\r\n      }\r\n\r\n      if (pswp.currSlide) {\r\n        pswp.currSlide.zoomAndPanToInitial();\r\n        this._animateTo(\r\n          pswp.currSlide.container,\r\n          'transform',\r\n          pswp.currSlide.getCurrentTransform()\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this._animateBgOpacity && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '1');\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToClosedState() {\r\n    const { pswp } = this;\r\n\r\n    if (this._animateZoom) {\r\n      this._setClosedStateZoomPan(true);\r\n    }\r\n\r\n    // do not animate opacity if it's already at 0\r\n    if (this._animateBgOpacity && pswp.bgOpacity > 0.01 && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', '0');\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '0');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {boolean} [animate]\r\n   */\r\n  _setClosedStateZoomPan(animate) {\r\n    if (!this._thumbBounds) return;\r\n\r\n    const { pswp } = this;\r\n    const { innerRect } = this._thumbBounds;\r\n    const { currSlide, viewportSize } = pswp;\r\n\r\n    if (this._croppedZoom && innerRect && this._cropContainer1 && this._cropContainer2) {\r\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\r\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\r\n      const containerTwoPanX = viewportSize.x - innerRect.w;\r\n      const containerTwoPanY = viewportSize.y - innerRect.h;\r\n\r\n\r\n      if (animate) {\r\n        this._animateTo(\r\n          this._cropContainer1,\r\n          'transform',\r\n          toTransformString(containerOnePanX, containerOnePanY)\r\n        );\r\n\r\n        this._animateTo(\r\n          this._cropContainer2,\r\n          'transform',\r\n          toTransformString(containerTwoPanX, containerTwoPanY)\r\n        );\r\n      } else {\r\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\r\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\r\n      }\r\n    }\r\n\r\n    if (currSlide) {\r\n      equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\r\n      currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\r\n      if (animate) {\r\n        this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\r\n      } else {\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {HTMLElement} target\r\n   * @param {'transform' | 'opacity'} prop\r\n   * @param {string} propValue\r\n   */\r\n  _animateTo(target, prop, propValue) {\r\n    if (!this._duration) {\r\n      target.style[prop] = propValue;\r\n      return;\r\n    }\r\n\r\n    const { animations } = this.pswp;\r\n    /** @type {AnimationProps} */\r\n    const animProps = {\r\n      duration: this._duration,\r\n      easing: this.pswp.options.easing,\r\n      onComplete: () => {\r\n        if (!animations.activeAnimations.length) {\r\n          this._onAnimationComplete();\r\n        }\r\n      },\r\n      target,\r\n    };\r\n    animProps[prop] = propValue;\r\n    animations.startTransition(animProps);\r\n  }\r\n}\r\n\r\nexport default Opener;\r\n","import {\r\n  createElement,\r\n  equalizePoints,\r\n  pointsEqual,\r\n  clamp,\r\n} from './util/util.js';\r\n\r\nimport DOMEvents from './util/dom-events.js';\r\nimport Slide from './slide/slide.js';\r\nimport Gestures from './gestures/gestures.js';\r\nimport MainScroll from './main-scroll.js';\r\n\r\nimport Keyboard from './keyboard.js';\r\nimport Animations from './util/animations.js';\r\nimport ScrollWheel from './scroll-wheel.js';\r\nimport UI from './ui/ui.js';\r\nimport { getViewportSize } from './util/viewport-size.js';\r\nimport { getThumbBounds } from './slide/get-thumb-bounds.js';\r\nimport PhotoSwipeBase from './core/base.js';\r\nimport Opener from './opener.js';\r\nimport ContentLoader from './slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\r\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n/** @typedef {import('./slide/get-thumb-bounds').Bounds} Bounds */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\r\n */\r\n\r\n/** @typedef {{ x: number; y: number; id?: string | number }} Point */\r\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\r\n/** @typedef {SlideData[]} DataSourceArray */\r\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\r\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\r\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\r\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\r\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\r\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\r\n\r\n/**\r\n * @typedef {string | NodeListOf<HTMLElement> | HTMLElement[] | HTMLElement} ElementProvider\r\n */\r\n\r\n/** @typedef {Partial<PreparedPhotoSwipeOptions>} PhotoSwipeOptions https://photoswipe.com/options/ */\r\n/**\r\n * @typedef {Object} PreparedPhotoSwipeOptions\r\n *\r\n * @prop {DataSource} [dataSource]\r\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\r\n * (which may be modified further from numItems event).\r\n *\r\n * Each item should contain data that you need to generate slide\r\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\r\n *\r\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\r\n *\r\n * @prop {number} bgOpacity\r\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\r\n *\r\n * @prop {number} spacing\r\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\r\n *\r\n * @prop {boolean} allowPanToNext\r\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\r\n *\r\n * @prop {boolean} loop\r\n * If set to true you'll be able to swipe from the last to the first image.\r\n * Option is always false when there are less than 3 slides.\r\n *\r\n * @prop {boolean} [wheelToZoom]\r\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\r\n *\r\n * @prop {boolean} pinchToClose\r\n * Pinch touch gesture to close the gallery.\r\n *\r\n * @prop {boolean} closeOnVerticalDrag\r\n * Vertical drag gesture to close the PhotoSwipe.\r\n *\r\n * @prop {Padding} [padding]\r\n * Slide area padding (in pixels).\r\n *\r\n * @prop {(viewportSize: Point, itemData: SlideData, index: number) => Padding} [paddingFn]\r\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\r\n *\r\n * @prop {number | false} hideAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} showAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} zoomAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {string} easing\r\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\r\n *\r\n * @prop {boolean} escKey\r\n * Esc key to close.\r\n *\r\n * @prop {boolean} arrowKeys\r\n * Left/right arrow keys for navigation.\r\n *\r\n * @prop {boolean} returnFocus\r\n * Restore focus the last active element after PhotoSwipe is closed.\r\n *\r\n * @prop {boolean} clickToCloseNonZoomable\r\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\r\n *\r\n * @prop {ActionType | ActionFn | false} imageClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} bgClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} tapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} doubleTapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {number} preloaderDelay\r\n * Delay before the loading indicator will be displayed,\r\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\r\n *\r\n * @prop {string} indexIndicatorSep\r\n * Used for slide count indicator (\"1 of 10 \").\r\n *\r\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipeBase) => Point} [getViewportSizeFn]\r\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\r\n *\r\n * @prop {string} errorMsg\r\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\r\n *\r\n * @prop {[number, number]} preload\r\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\r\n * first one - number of items to preload before the current image, second one - after the current image.\r\n * Two nearby images are always loaded.\r\n *\r\n * @prop {string} [mainClass]\r\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\r\n * Example on Styling page.\r\n *\r\n * @prop {HTMLElement} [appendToEl]\r\n * Element to which PhotoSwipe dialog will be appended when it opens.\r\n *\r\n * @prop {number} maxWidthToAnimate\r\n * Maximum width of image to animate, if initial rendered image width\r\n * is larger than this value - the opening/closing transition will be automatically disabled.\r\n *\r\n * @prop {string} [closeTitle]\r\n * Translating\r\n *\r\n * @prop {string} [zoomTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowNextTitle]\r\n * Translating\r\n *\r\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\r\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\r\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\r\n *\r\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\r\n *\r\n * @prop {number} index\r\n * Defines start slide index.\r\n *\r\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\r\n *\r\n * @prop {boolean} [arrowPrev]\r\n * @prop {boolean} [arrowNext]\r\n * @prop {boolean} [zoom]\r\n * @prop {boolean} [close]\r\n * @prop {boolean} [counter]\r\n *\r\n * @prop {string} [arrowPrevSVG]\r\n * @prop {string} [arrowNextSVG]\r\n * @prop {string} [zoomSVG]\r\n * @prop {string} [closeSVG]\r\n * @prop {string} [counterSVG]\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * @prop {string} [arrowNextTitle]\r\n * @prop {string} [zoomTitle]\r\n * @prop {string} [closeTitle]\r\n * @prop {string} [counterTitle]\r\n *\r\n * @prop {ZoomLevelOption} [initialZoomLevel]\r\n * @prop {ZoomLevelOption} [secondaryZoomLevel]\r\n * @prop {ZoomLevelOption} [maxZoomLevel]\r\n *\r\n * @prop {boolean} [mouseMovePan]\r\n * @prop {Point | null} [initialPointerPos]\r\n * @prop {boolean} [showHideOpacity]\r\n *\r\n * @prop {PhotoSwipeModuleOption} [pswpModule]\r\n * @prop {() => Promise<any>} [openPromise]\r\n * @prop {boolean} [preloadFirstSlide]\r\n * @prop {ElementProvider} [gallery]\r\n * @prop {string} [gallerySelector]\r\n * @prop {ElementProvider} [children]\r\n * @prop {string} [childSelector]\r\n * @prop {string | false} [thumbSelector]\r\n */\r\n\r\n/** @type {PreparedPhotoSwipeOptions} */\r\nconst defaultOptions = {\r\n  allowPanToNext: true,\r\n  spacing: 0.1,\r\n  loop: true,\r\n  pinchToClose: true,\r\n  closeOnVerticalDrag: true,\r\n  hideAnimationDuration: 333,\r\n  showAnimationDuration: 333,\r\n  zoomAnimationDuration: 333,\r\n  escKey: true,\r\n  arrowKeys: true,\r\n  returnFocus: true,\r\n  maxWidthToAnimate: 4000,\r\n  clickToCloseNonZoomable: true,\r\n  imageClickAction: 'zoom-or-close',\r\n  bgClickAction: 'close',\r\n  tapAction: 'toggle-controls',\r\n  doubleTapAction: 'zoom',\r\n  indexIndicatorSep: ' / ',\r\n  preloaderDelay: 2000,\r\n  bgOpacity: 0.8,\r\n\r\n  index: 0,\r\n  errorMsg: 'The image cannot be loaded',\r\n  preload: [1, 2],\r\n  easing: 'cubic-bezier(.4,0,.22,1)'\r\n};\r\n\r\n/**\r\n * PhotoSwipe Core\r\n */\r\nclass PhotoSwipe extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.options = this._prepareOptions(options || {});\r\n\r\n    /**\r\n     * offset of viewport relative to document\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.offset = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * @type {Point}\r\n     * @private\r\n     */\r\n    this._prevViewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * Size of scrollable PhotoSwipe viewport\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.viewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * background (backdrop) opacity\r\n     */\r\n    this.bgOpacity = 1;\r\n    this.currIndex = 0;\r\n    this.potentialIndex = 0;\r\n    this.isOpen = false;\r\n    this.isDestroying = false;\r\n    this.hasMouse = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {SlideData}\r\n     */\r\n    this._initialItemData = {};\r\n    /** @type {Bounds | undefined} */\r\n    this._initialThumbBounds = undefined;\r\n\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.topBar = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.template = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.container = undefined;\r\n    /** @type {HTMLElement | undefined} */\r\n    this.scrollWrap = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.currSlide = undefined;\r\n\r\n    this.events = new DOMEvents();\r\n    this.animations = new Animations();\r\n    this.mainScroll = new MainScroll(this);\r\n    this.gestures = new Gestures(this);\r\n    this.opener = new Opener(this);\r\n    this.keyboard = new Keyboard(this);\r\n    this.contentLoader = new ContentLoader(this);\r\n  }\r\n\r\n  /** @returns {boolean} */\r\n  init() {\r\n    if (this.isOpen || this.isDestroying) {\r\n      return false;\r\n    }\r\n\r\n    this.isOpen = true;\r\n    this.dispatch('init'); // legacy\r\n    this.dispatch('beforeOpen');\r\n\r\n    this._createMainStructure();\r\n\r\n    // add classes to the root element of PhotoSwipe\r\n    let rootClasses = 'pswp--open';\r\n    if (this.gestures.supportsTouch) {\r\n      rootClasses += ' pswp--touch';\r\n    }\r\n    if (this.options.mainClass) {\r\n      rootClasses += ' ' + this.options.mainClass;\r\n    }\r\n    if (this.element) {\r\n      this.element.className += ' ' + rootClasses;\r\n    }\r\n\r\n    this.currIndex = this.options.index || 0;\r\n    this.potentialIndex = this.currIndex;\r\n    this.dispatch('firstUpdate'); // starting index can be modified here\r\n\r\n    // initialize scroll wheel handler to block the scroll\r\n    this.scrollWheel = new ScrollWheel(this);\r\n\r\n    // sanitize index\r\n    if (Number.isNaN(this.currIndex)\r\n        || this.currIndex < 0\r\n        || this.currIndex >= this.getNumItems()) {\r\n      this.currIndex = 0;\r\n    }\r\n\r\n    if (!this.gestures.supportsTouch) {\r\n      // enable mouse features if no touch support detected\r\n      this.mouseDetected();\r\n    }\r\n\r\n    // causes forced synchronous layout\r\n    this.updateSize();\r\n\r\n    this.offset.y = window.pageYOffset;\r\n\r\n    this._initialItemData = this.getItemData(this.currIndex);\r\n    this.dispatch('gettingData', {\r\n      index: this.currIndex,\r\n      data: this._initialItemData,\r\n      slide: undefined\r\n    });\r\n\r\n    // *Layout* - calculate size and position of elements here\r\n    this._initialThumbBounds = this.getThumbBounds();\r\n    this.dispatch('initialLayout');\r\n\r\n    this.on('openingAnimationEnd', () => {\r\n      const { itemHolders } = this.mainScroll;\r\n\r\n      // Add content to the previous and next slide\r\n      if (itemHolders[0]) {\r\n        itemHolders[0].el.style.display = 'block';\r\n        this.setContent(itemHolders[0], this.currIndex - 1);\r\n      }\r\n      if (itemHolders[2]) {\r\n        itemHolders[2].el.style.display = 'block';\r\n        this.setContent(itemHolders[2], this.currIndex + 1);\r\n      }\r\n\r\n      this.appendHeavy();\r\n\r\n      this.contentLoader.updateLazy();\r\n\r\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\r\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\r\n      this.dispatch('bindEvents');\r\n    });\r\n\r\n    // set content for center slide (first time)\r\n    if (this.mainScroll.itemHolders[1]) {\r\n      this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\r\n    }\r\n    this.dispatch('change');\r\n\r\n    this.opener.open();\r\n\r\n    this.dispatch('afterInit');\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get looped slide index\r\n   * (for example, -1 will return the last slide)\r\n   *\r\n   * @param {number} index\r\n   * @returns {number}\r\n   */\r\n  getLoopedIndex(index) {\r\n    const numSlides = this.getNumItems();\r\n\r\n    if (this.options.loop) {\r\n      if (index > numSlides - 1) {\r\n        index -= numSlides;\r\n      }\r\n\r\n      if (index < 0) {\r\n        index += numSlides;\r\n      }\r\n    }\r\n\r\n    return clamp(index, 0, numSlides - 1);\r\n  }\r\n\r\n  appendHeavy() {\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.appendHeavy();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change the slide\r\n   * @param {number} index New index\r\n   */\r\n  goTo(index) {\r\n    this.mainScroll.moveIndexBy(\r\n      this.getLoopedIndex(index) - this.potentialIndex\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Go to the next slide.\r\n   */\r\n  next() {\r\n    this.goTo(this.potentialIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Go to the previous slide.\r\n   */\r\n  prev() {\r\n    this.goTo(this.potentialIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js zoomTo\r\n   *\r\n   * @param {Parameters<Slide['zoomTo']>} args\r\n   */\r\n  zoomTo(...args) {\r\n    this.currSlide?.zoomTo(...args);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js toggleZoom\r\n   */\r\n  toggleZoom() {\r\n    this.currSlide?.toggleZoom();\r\n  }\r\n\r\n  /**\r\n   * Close the gallery.\r\n   * After closing transition ends - destroy it\r\n   */\r\n  close() {\r\n    if (!this.opener.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isDestroying = true;\r\n\r\n    this.dispatch('close');\r\n\r\n    this.events.removeAll();\r\n    this.opener.close();\r\n  }\r\n\r\n  /**\r\n   * Destroys the gallery:\r\n   * - instantly closes the gallery\r\n   * - unbinds events,\r\n   * - cleans intervals and timeouts\r\n   * - removes elements from DOM\r\n   */\r\n  destroy() {\r\n    if (!this.isDestroying) {\r\n      this.options.showHideAnimationType = 'none';\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    this.dispatch('destroy');\r\n\r\n    this._listeners = {};\r\n\r\n    if (this.scrollWrap) {\r\n      this.scrollWrap.ontouchmove = null;\r\n      this.scrollWrap.ontouchend = null;\r\n    }\r\n\r\n    this.element?.remove();\r\n\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.destroy();\r\n    });\r\n\r\n    this.contentLoader.destroy();\r\n    this.events.removeAll();\r\n  }\r\n\r\n  /**\r\n   * Refresh/reload content of a slide by its index\r\n   *\r\n   * @param {number} slideIndex\r\n   */\r\n  refreshSlideContent(slideIndex) {\r\n    this.contentLoader.removeByIndex(slideIndex);\r\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\r\n      let potentialHolderIndex = (this.currSlide?.index ?? 0) - 1 + i;\r\n      if (this.canLoop()) {\r\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\r\n      }\r\n      if (potentialHolderIndex === slideIndex) {\r\n        // set the new slide content\r\n        this.setContent(itemHolder, slideIndex, true);\r\n\r\n        // activate the new slide if it's current\r\n        if (i === 1) {\r\n          this.currSlide = itemHolder.slide;\r\n          itemHolder.slide?.setIsActive(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dispatch('change');\r\n  }\r\n\r\n\r\n  /**\r\n   * Set slide content\r\n   *\r\n   * @param {ItemHolder} holder mainScroll.itemHolders array item\r\n   * @param {number} index Slide index\r\n   * @param {boolean} [force] If content should be set even if index wasn't changed\r\n   */\r\n  setContent(holder, index, force) {\r\n    if (this.canLoop()) {\r\n      index = this.getLoopedIndex(index);\r\n    }\r\n\r\n    if (holder.slide) {\r\n      if (holder.slide.index === index && !force) {\r\n        // exit if holder already contains this slide\r\n        // this could be common when just three slides are used\r\n        return;\r\n      }\r\n\r\n      // destroy previous slide\r\n      holder.slide.destroy();\r\n      holder.slide = undefined;\r\n    }\r\n\r\n    // exit if no loop and index is out of bounds\r\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\r\n      return;\r\n    }\r\n\r\n    const itemData = this.getItemData(index);\r\n    holder.slide = new Slide(itemData, index, this);\r\n\r\n    // set current slide\r\n    if (index === this.currIndex) {\r\n      this.currSlide = holder.slide;\r\n    }\r\n\r\n    holder.slide.append(holder.el);\r\n  }\r\n\r\n  /** @returns {Point} */\r\n  getViewportCenterPoint() {\r\n    return {\r\n      x: this.viewportSize.x / 2,\r\n      y: this.viewportSize.y / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update size of all elements.\r\n   * Executed on init and on page resize.\r\n   *\r\n   * @param {boolean} [force] Update size even if size of viewport was not changed.\r\n   */\r\n  updateSize(force) {\r\n    // let item;\r\n    // let itemIndex;\r\n\r\n    if (this.isDestroying) {\r\n      // exit if PhotoSwipe is closed or closing\r\n      // (to avoid errors, as resize event might be delayed)\r\n      return;\r\n    }\r\n\r\n    //const newWidth = this.scrollWrap.clientWidth;\r\n    //const newHeight = this.scrollWrap.clientHeight;\r\n\r\n    const newViewportSize = getViewportSize(this.options, this);\r\n\r\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\r\n      // Exit if dimensions were not changed\r\n      return;\r\n    }\r\n\r\n    //this._prevViewportSize.x = newWidth;\r\n    //this._prevViewportSize.y = newHeight;\r\n    equalizePoints(this._prevViewportSize, newViewportSize);\r\n\r\n    this.dispatch('beforeResize');\r\n\r\n    equalizePoints(this.viewportSize, this._prevViewportSize);\r\n\r\n    this._updatePageScrollOffset();\r\n\r\n    this.dispatch('viewportSize');\r\n\r\n    // Resize slides only after opener animation is finished\r\n    // and don't re-calculate size on inital size update\r\n    this.mainScroll.resize(this.opener.isOpen);\r\n\r\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\r\n      this.mouseDetected();\r\n    }\r\n\r\n    this.dispatch('resize');\r\n  }\r\n\r\n  /**\r\n   * @param {number} opacity\r\n   */\r\n  applyBgOpacity(opacity) {\r\n    this.bgOpacity = Math.max(opacity, 0);\r\n    if (this.bg) {\r\n      this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether mouse is detected\r\n   */\r\n  mouseDetected() {\r\n    if (!this.hasMouse) {\r\n      this.hasMouse = true;\r\n      this.element?.classList.add('pswp--has_mouse');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page resize event handler\r\n   *\r\n   * @private\r\n   */\r\n  _handlePageResize() {\r\n    this.updateSize();\r\n\r\n    // In iOS webview, if element size depends on document size,\r\n    // it'll be measured incorrectly in resize event\r\n    //\r\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\r\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\r\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\r\n      setTimeout(() => {\r\n        this.updateSize();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page scroll offset is used\r\n   * to get correct coordinates\r\n   * relative to PhotoSwipe viewport.\r\n   *\r\n   * @private\r\n   */\r\n  _updatePageScrollOffset() {\r\n    this.setScrollOffset(0, window.pageYOffset);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  setScrollOffset(x, y) {\r\n    this.offset.x = x;\r\n    this.offset.y = y;\r\n    this.dispatch('updateScrollOffset');\r\n  }\r\n\r\n  /**\r\n   * Create main HTML structure of PhotoSwipe,\r\n   * and add it to DOM\r\n   *\r\n   * @private\r\n   */\r\n  _createMainStructure() {\r\n    // root DOM element of PhotoSwipe (.pswp)\r\n    this.element = createElement('pswp', 'div');\r\n    this.element.setAttribute('tabindex', '-1');\r\n    this.element.setAttribute('role', 'dialog');\r\n\r\n    // template is legacy prop\r\n    this.template = this.element;\r\n\r\n    // Background is added as a separate element,\r\n    // as animating opacity is faster than animating rgba()\r\n    this.bg = createElement('pswp__bg', 'div', this.element);\r\n    this.scrollWrap = createElement('pswp__scroll-wrap', 'section', this.element);\r\n    this.container = createElement('pswp__container', 'div', this.scrollWrap);\r\n\r\n    // aria pattern: carousel\r\n    this.scrollWrap.setAttribute('aria-roledescription', 'carousel');\r\n    this.container.setAttribute('aria-live', 'off');\r\n    this.container.setAttribute('id', 'pswp__items');\r\n\r\n    this.mainScroll.appendHolders();\r\n\r\n    this.ui = new UI(this);\r\n    this.ui.init();\r\n\r\n    // append to DOM\r\n    (this.options.appendToEl || document.body).appendChild(this.element);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get position and dimensions of small thumbnail\r\n   *   {x:,y:,w:}\r\n   *\r\n   * Height is optional (calculated based on the large image)\r\n   *\r\n   * @returns {Bounds | undefined}\r\n   */\r\n  getThumbBounds() {\r\n    return getThumbBounds(\r\n      this.currIndex,\r\n      this.currSlide ? this.currSlide.data : this._initialItemData,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * If the PhotoSwipe can have continuous loop\r\n   * @returns Boolean\r\n   */\r\n  canLoop() {\r\n    return (this.options.loop && this.getNumItems() > 2);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PhotoSwipeOptions} options\r\n   * @returns {PreparedPhotoSwipeOptions}\r\n   */\r\n  _prepareOptions(options) {\r\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\r\n      options.showHideAnimationType = 'none';\r\n      options.zoomAnimationDuration = 0;\r\n    }\r\n\r\n    /** @type {PreparedPhotoSwipeOptions} */\r\n    return {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n  }\r\n}\r\n\r\nexport default PhotoSwipe;\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"photoswipe.esm.f6f31c2f.js.map","sourceRoot":"/__parcel_source_root/"}